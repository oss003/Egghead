;
; Code equates
;

cheat	= 0

L0004       = $0004
L000F       = $000F

L0050       = $0050	; X-pos Egghead
L0051       = $0051	; Y-pos Egghead
L0052       = $0052	; Direction flag
                        ; b3 = 0 -> right
                        ;      1 -> left
L0053       = $0053	; Room pointer
L0054       = $0054	; Jump addition
L0056       = $0056	; X-pos item
L0057       = $0057	; Y-pos item
L0058       = $0058	; Itemnr on screen
L0059       = $0059	; Auto rising flag (lift)
L005A       = $005A	; Frame counter
L005B       = $005B

L0070       = $0070
L0071       = $0071

L0072       = $0072
L0073       = $0073

L0074       = $0074
L0075       = $0075

L0076       = $0076
L0077       = $0077	; Bit counter
L0078       = $0078
L0079       = $0079
L007A       = $007A
L007B       = $007B
L007C       = $007C
L0080       = $0080	; Lives
                        ; b7   = 0/1 -> death
                        ; b6   = 0/1 -> Game completed
                        ; b5   = not used
                        ; b4   = not used
                        ; b3   = not used
                        ; b0-2 = lives
L0082       = $0082
L0083       = $0083
L0084       = $0084
L0085       = $0085
L0086       = $0086
L0087       = $0087	; Laserbeam pause time
L0088       = $0088

L09E0       = $0be0
L0B00       = $0d00

L6220       = $6220
L6360       = $6360
L64A0       = $64a0
L65E0       = $65e0
L6720       = $6720
L6860       = $6860
L69A0       = $69a0
L6AE0       = $6ae0
L6C20       = $6c20
L6D60       = $6d60
L6EA0       = $6ea0
L6FE0       = $6fe0
L7120       = $7120
L7260       = $7260
L73A0       = $73a0
L74E0       = $74e0
L7620       = $7620
L7760       = $7760
L78A0       = $78a0

L6AF8       = $6af8
L6C38       = $6c38
L7520       = $7520
L6E00       = $6e00
L7640       = $7640
L76C0       = $76c0
L76E8       = $76e8
L7798       = $7798

LD08C       = $D08C
LDDDD       = $DDDD

;LFFE0       = $FE94	; OSRDCH
LFFEE       = PRINTCHAR	; OSWRCH
LFFF1       = $FFF1	; OSWORD
LFFF4       = $FFF4	; OSBYTE
;

; Start of code
;
;            *= $1100 $4935
;

;------------------------------------------------
; Egghead sprites
;------------------------------------------------

L1100:
            .byte $00,$F8,$03,$FE,$0F,$FF,$1F,$E1
L1108:      .byte $3F,$ED,$3F,$E5,$7F,$A1,$7F,$A1
            .byte $7F,$B2,$3F,$DE,$39,$E0,$06,$FC
            .byte $7D,$FB,$70,$E7,$3F,$1E,$1F,$38

            .byte $00,$3E,$80,$FF,$C3,$FF,$47,$F8
            .byte $4F,$FB,$4F,$F9,$5F,$E8,$5F,$E8
            .byte $9F,$EC,$8F,$F7,$0E,$78,$01,$BF
            .byte $07,$3E,$8F,$D9,$8F,$C7,$00,$3E

            .byte $80,$0F,$E0,$3F,$F0,$FF,$11,$FE
            .byte $D3,$FE,$53,$FE,$17,$FA,$17,$FA
            .byte $27,$FB,$E3,$FD,$03,$CE,$C1,$B3
            .byte $80,$7D,$00,$FC,$80,$01,$80,$3F

            .byte $E0,$03,$F8,$0F,$FC,$3F,$84,$7F
            .byte $B4,$FF,$94,$FF,$85,$FE,$85,$FE
            .byte $C9,$FE,$78,$FF,$80,$FB,$30,$74
            .byte $C0,$2F,$C0,$0F,$00,$00,$80,$3F

            .byte $00,$F8,$03,$FE,$0F,$FF,$1F,$E1
            .byte $3F,$ED,$3F,$E5,$7F,$A1,$7F,$A1
            .byte $7F,$B2,$3F,$DE,$3E,$E0,$1D,$7C
            .byte $0E,$80,$02,$FC,$38,$7C,$1F,$80

            .byte $00,$3E,$80,$FF,$C3,$FF,$47,$F8
            .byte $4F,$FB,$4F,$F9,$5F,$E8,$5F,$E8
            .byte $9F,$EC,$8F,$F7,$0F,$B8,$07,$5F
            .byte $03,$AE,$00,$A0,$03,$3F,$00,$3F

            .byte $80,$0F,$E0,$3F,$F0,$FF,$11,$FE
            .byte $D3,$FE,$53,$FE,$17,$FA,$17,$FA
            .byte $27,$FB,$E3,$FD,$03,$EE,$C1,$D7
            .byte $80,$B7,$00,$20,$00,$7F,$00,$7F

            .byte $E0,$03,$F8,$0F,$FC,$3F,$84,$7F
            .byte $B4,$FF,$94,$FF,$85,$FE,$85,$FE
            .byte $C9,$FE,$78,$FF,$80,$F7,$F0,$6B
            .byte $E8,$1B,$90,$30,$60,$7F,$00,$7F

            .byte $1F,$00,$7F,$C0,$FF,$F0,$87,$F8
            .byte $B7,$FC,$97,$FC,$85,$FE,$85,$FE
            .byte $4D,$FE,$7B,$FC,$07,$9C,$3F,$60
            .byte $DF,$BE,$E7,$0E,$78,$FC,$1C,$F8

            .byte $07,$C0,$1F,$F0,$3F,$FC,$21,$FE
            .byte $2D,$FF,$25,$FF,$A1,$7F,$A1,$7F
            .byte $93,$7F,$1E,$FF,$01,$EF,$0F,$D6
            .byte $17,$D8,$09,$0C,$06,$FE,$06,$FE

            .byte $01,$F0,$07,$FC,$0F,$FF,$88,$7F
            .byte $CB,$7F,$C9,$7F,$E8,$5F,$E8,$5F
            .byte $E4,$DF,$C7,$BF,$C0,$77,$83,$EB
            .byte $01,$ED,$00,$04,$00,$FE,$00,$FE

            .byte $00,$7C,$01,$FF,$C3,$FF,$E2,$1F
            .byte $F2,$DF,$F2,$5F,$FA,$17,$FA,$17
            .byte $F9,$37,$F1,$EF,$F0,$1D,$E0,$FA
            .byte $C0,$75,$00,$05,$C0,$FC,$00,$FC

            .byte $1F,$00,$7F,$C0,$FF,$F0,$87,$F8
            .byte $B7,$FC,$97,$FC,$85,$FE,$85,$FE
            .byte $4D,$FE,$7B,$FC,$07,$7C,$3E,$B8
            .byte $01,$70,$3F,$40,$3E,$1C,$01,$F8

            .byte $07,$C0,$1F,$F0,$3F,$FC,$21,$FE
            .byte $2D,$FF,$25,$FF,$A1,$7F,$A1,$7F
            .byte $93,$7F,$1E,$FF,$01,$DF,$0C,$2E
            .byte $03,$F4,$03,$F0,$00,$00,$01,$FC

            .byte $01,$F0,$07,$FC,$0F,$FF,$88,$7F
            .byte $CB,$7F,$C9,$7F,$E8,$5F,$E8,$5F
            .byte $E4,$DF,$C7,$BF,$C0,$73,$83,$CD
            .byte $01,$BE,$00,$3F,$01,$80,$01,$FC

            .byte $00,$7C,$01,$FF,$C3,$FF,$E2,$1F
            .byte $F2,$DF,$F2,$5F,$FA,$17,$FA,$17
            .byte $F9,$37,$F1,$EF,$70,$1E,$80,$FD
            .byte $E0,$7C,$F1,$9B,$F1,$E3,$00,$7C

            .byte $0E,$3E,$1E,$FE,$3E,$FF,$3D,$E1
            .byte $7D,$ED,$7B,$E5,$FB,$A1,$F7,$A1
            .byte $77,$B2,$0F,$DE,$39,$E0,$06,$FC
            .byte $7D,$FB,$70,$E7,$3F,$1E,$1F,$38

            .byte $83,$8F,$87,$BF,$CF,$BF,$4F,$78
            .byte $5F,$7B,$5E,$F9,$7E,$E8,$7D,$E8
            .byte $9D,$EC,$83,$F7,$0E,$78,$01,$BF
            .byte $07,$3E,$8F,$D9,$8F,$C7,$00,$3E

            .byte $E0,$E3,$E1,$EF,$F3,$EF,$13,$DE
            .byte $D7,$DE,$57,$BE,$1F,$BA,$1F,$7A
            .byte $27,$7B,$E0,$FD,$03,$CE,$C1,$B3
            .byte $80,$7D,$00,$FC,$80,$01,$80,$3F

            .byte $F8,$38,$F8,$7B,$FC,$FB,$84,$F7
            .byte $B5,$F7,$95,$EF,$87,$EE,$87,$DE
            .byte $C9,$DE,$78,$3F,$80,$FB,$30,$74
            .byte $C0,$2F,$C0,$0F,$00,$00,$80,$3F

            .byte $0E,$3E,$1E,$FE,$3E,$FF,$3D,$E1
            .byte $7D,$ED,$7B,$E5,$FB,$A1,$F7,$A1
            .byte $77,$B2,$0F,$DE,$3E,$E0,$1D,$7C
            .byte $0E,$80,$02,$FC,$38,$7C,$1F,$80

            .byte $83,$8F,$87,$BF,$CF,$BF,$4F,$78
            .byte $5F,$7B,$5E,$F9,$7E,$E8,$7D,$E8
            .byte $9D,$EC,$83,$F7,$0F,$B8,$07,$5F
            .byte $03,$AE,$00,$A0,$03,$3F,$00,$3F

            .byte $E0,$E3,$E1,$EF,$F3,$EF,$13,$DE
            .byte $D7,$DE,$57,$BE,$1F,$BA,$1F,$7A
            .byte $27,$7B,$E0,$FD,$03,$EE,$C1,$D7
            .byte $80,$B7,$00,$20,$00,$7F,$00,$7F

            .byte $F8,$38,$F8,$7B,$FC,$FB,$84,$F7
            .byte $B5,$F7,$95,$EF,$87,$EE,$87,$DE
            .byte $C9,$DE,$78,$3F,$80,$F7,$F0,$6B
            .byte $E8,$1B,$90,$30,$60,$7F,$00,$7F

            .byte $7C,$70,$7F,$78,$FF,$7C,$87,$BC
            .byte $B7,$BE,$97,$DE,$85,$DF,$85,$EF
            .byte $4D,$EE,$7B,$F0,$07,$9C,$3F,$60
            .byte $DF,$BE,$E7,$0E,$78,$FC,$1C,$F8

            .byte $1F,$1C,$1F,$DE,$3F,$DF,$21,$EF
            .byte $AD,$EF,$A5,$F7,$E1,$77,$E1,$7B
            .byte $93,$7B,$1E,$FC,$01,$EF,$0F,$D6
            .byte $17,$D8,$09,$0C,$06,$FE,$06,$FE

            .byte $07,$C7,$87,$F7,$CF,$F7,$C8,$7B
            .byte $EB,$7B,$E9,$7D,$F8,$5D,$F8,$5E
            .byte $E4,$DE,$07,$BF,$C0,$77,$83,$EB
            .byte $01,$ED,$00,$04,$00,$FE,$00,$FE

            .byte $C1,$F1,$E1,$FD,$F3,$FD,$F2,$1E
            .byte $FA,$DE,$7A,$5F,$7E,$17,$BE,$17
            .byte $B9,$37,$C1,$EF,$F0,$1D,$E0,$FA
            .byte $C0,$75,$00,$05,$C0,$FC,$00,$FC

            .byte $7C,$70,$7F,$78,$FF,$7C,$87,$BC
            .byte $B7,$BE,$97,$DE,$85,$DF,$85,$EF
            .byte $4D,$EE,$7B,$F0,$07,$7C,$3E,$B8
            .byte $01,$70,$3F,$40,$3E,$1C,$01,$F8

            .byte $1F,$1C,$1F,$DE,$3F,$DF,$21,$EF
            .byte $AD,$EF,$A5,$F7,$E1,$77,$E1,$7B
            .byte $93,$7B,$1E,$FC,$01,$DF,$0C,$2E
            .byte $03,$F4,$03,$F0,$00,$00,$01,$FC

            .byte $07,$C7,$87,$F7,$CF,$F7,$C8,$7B
            .byte $EB,$7B,$E9,$7D,$F8,$5D,$F8,$5E
            .byte $E4,$DE,$07,$BF,$C0,$73,$83,$CD
            .byte $01,$BE,$00,$3F,$01,$80,$01,$FC

            .byte $C1,$F1,$E1,$FD,$F3,$FD,$F2,$1E
            .byte $FA,$DE,$7A,$5F,$7E,$17,$BE,$17
            .byte $B9,$37,$C1,$EF,$70,$1E,$80,$FD
            .byte $E0,$7C,$F1,$9B,$F1,$E3,$00,$7C

;------------------------------------------------
; Tiles 8x8
;------------------------------------------------

L1500:
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $FF,$55,$2B,$55,$2B,$55,$2B,$01
            .byte $FF,$FF,$55,$54,$44,$04,$04,$00
            .byte $00,$3C,$3C,$3C,$3C,$3C,$3C,$00
            .byte $7F,$7F,$7F,$00,$EF,$EF,$EF,$00
            .byte $FF,$FF,$FF,$00,$55,$55,$00,$00
            .byte $00,$11,$11,$00,$08,$00,$02,$02
            .byte $00,$F8,$F8,$00,$F0,$00,$C0,$C0
            .byte $02,$02,$00,$B6,$B6,$00,$0C,$02
            .byte $C0,$C0,$00,$DB,$DB,$00,$F0,$C0
            .byte $02,$0C,$00,$B6,$B6,$00,$02,$02
            .byte $C0,$F0,$00,$DB,$DB,$00,$C0,$C0
            .byte $02,$02,$00,$08,$00,$11,$11,$00
            .byte $C0,$C0,$00,$F0,$00,$F8,$F8,$00
            .byte $00,$03,$0C,$10,$21,$22,$45,$43
            .byte $FF,$3F,$7F,$DC,$7E,$FF,$7F,$FC
            .byte $00,$C0,$F0,$F8,$FC,$FC,$9E,$CE
            .byte $85,$83,$85,$83,$85,$92,$89,$84
            .byte $7E,$FC,$7A,$DD,$7E,$FF,$5F,$BE
            .byte $EF,$6F,$1F,$3F,$FF,$F9,$FD,$FD
            .byte $45,$40,$20,$20,$10,$0C,$03,$00
            .byte $57,$AF,$55,$2A,$05,$00,$00,$FF
            .byte $DE,$7E,$D4,$A4,$48,$30,$C0,$00
            .byte $00,$00,$00,$00,$00,$01,$00,$04
            .byte $00,$05,$08,$20,$80,$00,$00,$00
            .byte $FF,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$E0,$18,$04,$03,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$80,$40,$20
            .byte $00,$08,$00,$10,$00,$20,$00,$40
            .byte $20,$10,$08,$08,$04,$04,$04,$02
            .byte $00,$40,$00,$40,$00,$80,$00,$80
            .byte $02,$02,$02,$02,$01,$01,$01,$01
            .byte $00,$00,$00,$00,$00,$00,$00,$01
            .byte $00,$00,$00,$10,$00,$00,$00,$00
            .byte $00,$04,$00,$00,$00,$00,$00,$00
            .byte $FF,$C3,$A5,$99,$99,$A5,$C3,$81
            .byte $00,$44,$44,$44,$EE,$EE,$EE,$FF
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $FF,$FF,$FF,$00,$DE,$DE,$DE,$00
            .byte $DE,$DE,$DE,$00,$FF,$FF,$FF,$00
            .byte $08,$3E,$FF,$FF,$FF,$FF,$FF,$FF
            .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
            .byte $FF,$7F,$3F,$1F,$0F,$07,$03,$01
            .byte $FF,$EE,$EE,$EE,$44,$44,$44,$00
            .byte $0E,$EE,$EE,$E0,$E0,$00,$00,$00
            .byte $0F,$8E,$CC,$E8,$17,$33,$71,$F0
            .byte $FF,$FF,$7E,$3C,$7E,$7E,$18,$18
            .byte $C0,$E4,$FC,$FF,$FF,$FC,$E4,$C0
            .byte $18,$18,$7E,$7E,$3C,$7E,$FF,$FF
            .byte $03,$27,$3F,$FF,$FF,$3F,$27,$03
            .byte $FF,$80,$80,$81,$83,$83,$87,$8F
            .byte $FF,$01,$01,$F1,$E1,$C1,$81,$E1
            .byte $81,$83,$87,$86,$88,$80,$80,$FF
            .byte $C1,$81,$01,$01,$01,$01,$01,$FF
L16B0:      .byte $77,$77,$77,$00,$77,$77,$77,$00
            .byte $77,$77,$77,$00,$00,$00,$00,$00
            .byte $81,$BD,$81,$BD,$81,$BD,$81,$BD
            .byte $01,$7D,$45,$7D,$45,$7D,$01,$FF
            .byte $0E,$3E,$7E,$BE,$9E,$46,$32,$0E
            .byte $70,$7C,$7E,$7F,$5F,$42,$4C,$70
            .byte $0F,$00,$3C,$78,$F0,$E1,$FF,$87
            .byte $AA,$00,$AA,$00,$AA,$00,$AA,$00
            .byte $FE,$7E,$AA,$00,$EF,$E7,$AA,$00
            .byte $00,$00,$7E,$7E,$7E,$7E,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $01,$01,$02,$02,$04,$04,$09,$09
            .byte $00,$00,$80,$80,$C0,$C0,$E0,$E0
            .byte $11,$11,$23,$23,$00,$23,$00,$23
            .byte $F0,$F0,$F8,$F8,$00,$F8,$00,$F8
            .byte $23,$23,$23,$23,$23,$23,$23,$23
            .byte $F8,$F8,$F8,$F8,$F8,$F8,$F8,$F8
            .byte $00,$43,$83,$00,$83,$83,$83,$83
            .byte $00,$FC,$FE,$00,$FE,$FE,$FE,$FE
            .byte $83,$83,$83,$83,$83,$83,$83,$00
            .byte $FE,$FE,$FE,$FE,$FE,$FE,$FE,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $30,$60,$C0,$60,$30,$18,$0C,$18
            .byte $0C,$06,$03,$06,$0C,$18,$30,$18
            .byte $04,$0E,$1B,$B1,$E0,$40,$00,$00
            .byte $00,$00,$40,$E0,$B1,$1B,$0E,$04

;------------------------------------------------
; Room data
;------------------------------------------------

L1780:
            .byte $01,$20
            .byte $81,$00,$0B,$B8,$00,$13
            .byte $81,$00,$0B,$B8,$00,$13
            .byte $81,$00,$0B,$01,$08,$00,$02,$01,$0A
            .byte $81,$00,$0B,$81,$39,$04,$01,$03,$00,$02,$01,$0A
            .byte $01,$20
            .byte $81,$00,$12,$86,$87,$00,$0A,$81
            .byte $81,$80,$BA,$3C,$02,$BB,$00,$0D,$88,$89,$00,$0A,$81
            .byte $81,$80,$A5,$3D,$02,$00,$1A,$81
            .byte $81,$80,$A5,$3D,$02,$00,$0A,$8A,$8B,$00,$08,$8A,$8B,$00,$04,$81
            .byte $81,$80,$A5,$3D,$02,$00,$0A,$8C,$8D,$00,$08,$8C,$8D,$00,$04,$81
            .byte $81,$05,$08,$00,$04,$01,$08,$00,$03,$05,$04,$00,$03,$81
            .byte $81,$00,$1E,$81,$81,$00,$1E,$81
            .byte $81,$00,$0C,$05,$12,$81
            .byte $81,$00,$1F
            .byte $81,$00,$1F
            .byte $81,$00,$03,$01,$1C

L1809:      .byte $01,$20,$00,$1F,$81,$00,$1F
            .byte $81,$81,$05,$07,$00,$17,$81,$81
            .byte $00,$14,$85,$00,$09,$81,$81,$00
            .byte $1E,$81,$81,$00,$0B,$85,$00,$0C
            .byte $05,$02,$00,$04,$81,$81,$00,$1E
            .byte $81,$81,$00,$11,$05,$02,$00,$0B
            .byte $81,$81,$00,$08,$05,$03,$00,$0F
            .byte $05,$02,$00,$02,$81,$81,$05,$02
            .byte $00,$1C,$81,$81,$00,$15,$81,$05
            .byte $03,$00,$05,$81,$81,$00,$15,$81
            .byte $00,$08,$81,$81,$00,$05,$81,$05
            .byte $03,$00,$0C,$81,$00,$08,$81,$01
            .byte $07,$00,$06,$05,$05,$00,$04,$81
            .byte $00,$04,$05,$04,$81,$00,$16,$81
            .byte $00,$09,$00,$16,$81,$00,$09,$01
            .byte $20
L1881:      .byte $01,$0E,$00,$04,$01,$0E,$81
            .byte $00,$07,$86,$87,$00,$0C,$86,$87
            .byte $00,$07,$81,$81,$00,$07,$88,$89
            .byte $00,$0C,$88,$89,$00,$07,$81,$81
            .byte $00,$0B,$8A,$8B,$80,$05,$02,$80
            .byte $8A,$8B,$00,$0B,$81,$81,$00,$0B
            .byte $8C,$8D,$00,$04,$8C,$8D,$00,$0B
            .byte $81,$81,$00,$04,$05,$16,$00,$04
            .byte $81,$81,$00,$1E,$81,$81,$00,$1E
            .byte $81,$81,$00,$1A,$05,$04,$81,$81
            .byte $00,$1E,$81,$81,$00,$1E,$81,$81
            .byte $00,$04,$01,$15,$00,$05,$81,$81
            .byte $00,$1E,$81,$81,$00,$1E,$81,$01
            .byte $15,$00,$0A,$81,$00,$14,$83,$00
            .byte $0A,$81,$00,$14,$83,$00,$0A,$81
            .byte $01,$20
L18FA:      .byte $84,$00,$03,$04,$1C,$84
            .byte $00,$1E,$84,$84,$00,$1E,$84,$04
            .byte $0A,$00,$15,$84,$00,$09,$84,$00
            .byte $15,$84,$00,$09,$84,$02,$08,$00
            .byte $0D,$84,$04,$0A,$00,$15,$84,$84
            .byte $00,$13,$02,$07,$00,$04,$84,$84
            .byte $00,$1E,$84,$84,$00,$19,$02,$05
            .byte $84,$84,$00,$1E,$84,$84,$00,$0C
            .byte $04,$08,$00,$0A,$84,$84,$02,$02
            .byte $00,$08,$02,$02,$84,$00,$06,$84
            .byte $00,$0A,$84,$00,$0D,$84,$00,$06
            .byte $84,$02,$03,$00,$08,$00,$03,$02
            .byte $02,$00,$08,$84,$00,$06,$84,$00
            .byte $06,$02,$04,$80,$00,$0D,$84,$00
            .byte $06,$84,$00,$0B,$00,$0D,$84,$00
            .byte $06,$84,$00,$0B,$04,$0E,$00,$06
            .byte $04,$0C
L197A:      .byte $04,$10,$00,$02,$04,$04
            .byte $00,$02,$04,$08,$84,$00,$11,$04
            .byte $04,$00,$09,$84,$84,$00,$11,$04
            .byte $04,$00,$09,$84,$84,$00,$04,$04
            .byte $16,$00,$04,$84,$84,$00,$19,$84
            .byte $00,$05,$84,$00,$19,$84,$00,$05
            .byte $04,$09,$00,$11,$84,$00,$02,$04
            .byte $03,$84,$00,$19,$84,$00,$02,$04
            .byte $03,$84,$00,$19,$84,$24,$02,$04
            .byte $03,$84,$00,$03,$02,$12,$00,$04
            .byte $04,$06,$84,$00,$1E,$84,$84,$00
            .byte $1E,$84,$84,$02,$06,$00,$04,$02
            .byte $10,$00,$04,$84,$84,$00,$1F,$84
            .byte $00,$1F,$84,$00,$04,$02,$08,$00
            .byte $13,$84,$00,$1F,$04,$20
L19EE:      .byte $A2,$00
            .byte $14,$A0,$00,$0A,$00,$02,$A1,$00
            .byte $1B,$A2,$80,$00,$11,$A1,$00,$07
            .byte $8E,$8F,$90,$00,$04,$00,$08,$A0
            .byte $00,$10,$91,$92,$93,$00,$04,$00
            .byte $12,$A0,$00,$06,$94,$95,$96,$00
            .byte $04,$00,$20,$A0,$00,$15,$A1,$A2
            .byte $00,$08,$00,$07,$A2,$00,$14,$A0
            .byte $00,$03,$00,$06,$A0,$00,$14,$A2
            .byte $00,$04,$00,$06,$A1,$97,$98,$99
            .byte $9A,$9B,$00,$02,$97,$98,$99,$9A
            .byte $9B,$00,$02,$97,$98,$99,$9A,$9B
            .byte $00,$06,$00,$07,$9C,$00,$03,$9D
            .byte $00,$02,$9C,$00,$03,$9D,$00,$02
            .byte $9C,$00,$03,$9D,$00,$03,$A1,$A0
            .byte $80,$A1,$00,$02,$A0,$00,$03,$9E
            .byte $00,$03,$9F,$00,$02,$9E,$00,$03
            .byte $9F,$00,$02,$9E,$00,$03,$9F,$A2
            .byte $00,$05,$04,$08,$00,$03,$04,$04
            .byte $00,$03,$04,$04,$00,$03,$04,$07
            .byte $00,$20,$00,$20,$00,$20,$00,$20
            .byte $04,$20
L1A92:      .byte $A2,$00,$07,$97,$98,$99
            .byte $9A,$9B,$00,$08,$A0,$00,$0A,$00
            .byte $02,$A1,$00,$05,$9C,$00,$03,$9D
            .byte $00,$11,$A2,$80,$00,$08,$9E,$00
            .byte $03,$9F,$00,$04,$A1,$00,$07,$8E
            .byte $8F,$90,$00,$04,$04,$09,$00,$03
            .byte $04,$0A,$00,$03,$91,$92,$93,$00
            .byte $04,$84,$00,$14,$84,$00,$03,$94
            .byte $95,$96,$00,$04,$84,$00,$14,$84
            .byte $00,$0A,$84,$00,$02,$02,$0F,$00
            .byte $03,$84,$A1,$A2,$00,$08,$84,$00
            .byte $14,$84,$00,$06,$A0,$00,$03,$84
            .byte $00,$14,$84,$00,$05,$A2,$00,$04
            .byte $84,$02,$02,$00,$0A,$84,$02,$04
            .byte $00,$03,$84,$00,$0A,$84,$00,$0C
            .byte $84,$00,$07,$84,$00,$07,$A1,$A0
            .byte $80,$84,$00,$0C,$84,$00,$04,$02
            .byte $03,$84,$00,$04,$A2,$00,$05,$84
            .byte $00,$02,$02,$02,$00,$08,$84,$00
            .byte $07,$04,$0B,$00,$0D,$84,$00,$12
            .byte $00,$06,$02,$03,$00,$04,$84,$02
            .byte $04,$00,$0E,$00,$0D,$84,$00,$12
            .byte $00,$0D,$84,$00,$12,$04,$20
L1B47:      .byte $A2
            .byte $00,$0B,$84,$00,$07,$84,$A0,$00
            .byte $0A,$00,$02,$A1,$00,$09,$84,$00
            .byte $07,$84,$00,$09,$A2,$80,$00,$0C
            .byte $84,$00,$07,$84,$00,$04,$8E,$8F
            .byte $90,$00,$04,$00,$08,$A0,$00,$03
            .byte $84,$02,$02,$00,$05,$84,$00,$04
            .byte $91,$92,$93,$00,$04,$00,$0C,$84
            .byte $00,$07,$84,$00,$04,$94,$95,$96
            .byte $00,$04,$00,$0C,$84,$00,$07,$84
            .byte $00,$0B,$A0,$00,$0B,$84,$00,$05
            .byte $02,$02,$84,$80,$A1,$A2,$00,$08
            .byte $00,$07,$A2,$00,$04,$84,$00,$07
            .byte $84,$00,$07,$A0,$00,$03,$00,$06
            .byte $A0,$00,$05,$84,$00,$07,$84,$00
            .byte $06,$A2,$00,$04,$00,$06,$A1,$97
            .byte $98,$19,$03,$84,$02,$02,$00,$05
            .byte $84,$19,$03,$9A,$9B,$00,$06,$00
            .byte $07,$9C,$00,$11,$9D,$00,$03,$A1
            .byte $A0,$80,$A1,$00,$02,$A0,$00,$03
            .byte $9E,$00,$11,$9F,$A2,$00,$05,$04
            .byte $08,$00,$07,$04,$03,$00,$07,$84
            .byte $00,$06,$00,$19,$84,$00,$06,$00
            .byte $0D,$02,$02,$00,$07,$02,$03,$84
            .byte $A0,$A1,$A2,$00,$03,$00,$19,$84
            .byte $00,$03,$A0,$00,$02,$00,$19,$84
            .byte $00,$05,$A1,$04,$20
L1C15:      .byte $A2,$00,$14
            .byte $A0,$00,$0A,$00,$02,$A1,$00,$1B
            .byte $A2,$80,$00,$11,$A1,$00,$07,$8E
            .byte $8F,$90,$00,$04,$00,$08,$A0,$00
            .byte $10,$91,$92,$93,$00,$04,$00,$12
            .byte $A0,$00,$06,$94,$95,$96,$00,$04
            .byte $00,$09,$C1,$C2,$00,$15,$A0,$00
            .byte $08,$C3,$C4,$00,$0B,$A1,$A2,$00
            .byte $08,$00,$07,$A2,$80,$C5,$C6,$00
            .byte $11,$A0,$00,$03,$00,$06,$A0,$23
            .byte $02,$C5,$C6,$00,$10,$A2,$00,$04
            .byte $00,$06,$A1,$A3,$C0,$C5,$C6,$00
            .byte $0A,$23,$05,$00,$06,$00,$07,$A3
            .byte $C0,$C5,$C6,$00,$0D,$A3,$00,$04
            .byte $A1,$A0,$80,$A1,$00,$02,$A0,$00
            .byte $03,$A3,$C0,$C5,$C6,$00,$0C,$23
            .byte $03,$A2,$00,$05,$00,$07,$A3,$C0
            .byte $C5,$C6,$00,$0D,$A3,$00,$07,$00
            .byte $04,$23,$05,$C5,$C6,$80,$97,$98
            .byte $19,$05,$9A,$9B,$00,$03,$A3,$00
            .byte $07,$00,$05,$A3,$80,$A3,$C0,$C7
            .byte $C8,$80,$9C,$00,$07,$9D,$00,$03
            .byte $A3,$80,$A0,$A1,$A2,$00,$03,$00
            .byte $05,$A3,$A2,$A3,$C0,$C9,$CA,$80
            .byte $9E,$00,$07,$9F,$00,$03,$A3,$00
            .byte $04,$A0,$00,$02,$00,$02,$A0,$04
            .byte $0A,$00,$07,$04,$0A,$80,$A1,$A2
            .byte $00,$0B,$84,$00,$07,$84,$A0,$00
            .byte $0A
L1CF1:      .byte $A2,$00,$14,$A0,$00,$0A,$A6
            .byte $A7,$A1,$00,$1B,$A2,$80,$A6,$A7
            .byte $00,$0F,$A1,$00,$07,$8E,$8F,$90
            .byte $00,$04,$A6,$A7,$00,$06,$A0,$00
            .byte $10,$91,$92,$93,$00,$04,$A6,$A7
            .byte $00,$10,$A0,$00,$05,$A3,$94,$95
            .byte $96,$00,$04,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$23,$04
            .byte $00,$09,$A3,$00,$07,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $00,$0B,$A1,$A2,$A3,$00,$07,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$00,$0D,$A3,$00,$03,$A0
            .byte $00,$03,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$00,$0D,$A3
            .byte $00,$02,$A2,$00,$04,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $00,$08,$BA,$3C,$02,$BB,$80,$A3
            .byte $00,$07,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$00,$09,$3D
            .byte $02,$A5,$80,$23,$04,$80,$A1,$A0
            .byte $80,$A6,$A7,$A6,$A7,$A6,$A7,$00
            .byte $0E,$3D,$02,$A5,$80,$A3,$00,$07
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$00,$0E
            .byte $3D,$02,$A5,$80,$A3,$00,$07,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$00,$05,$23,$09,$00,$07
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$00,$0D,$A3,$80,$A0
            .byte $A1,$A2,$00,$03,$A6,$A7,$00,$04
            .byte $A6,$A7,$A6,$A7,$A6,$00,$0D,$A3
            .byte $00,$04,$A0,$00,$02,$A6,$A7,$00
            .byte $04,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $00,$0B,$A3,$00,$06,$A1,$A6,$A7
            .byte $00,$04,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$00,$0B,$A3,$00,$07
L1E0E:      .byte $A6,$A7
            .byte $00,$04,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$00,$0B,$A3,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A6,$A7,$00,$04,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$00,$0B
            .byte $A3,$A6,$A7,$00,$05,$A6,$A7,$00
            .byte $16,$A3,$A6,$A7,$00,$05,$A6,$A7
            .byte $00,$16,$A3,$A6,$A7,$00,$05,$A6
            .byte $A7,$00,$0C,$23,$08,$00,$02,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A6
            .byte $A7,$00,$04,$A6,$A7,$A6,$A7,$A6
            .byte $00,$15,$A6,$A7,$00,$04,$A6,$A7
            .byte $A6,$A7,$A6,$00,$15,$A6,$A7,$A3
            .byte $00,$04,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$00,$11,$A6,$A7,$00,$14
            .byte $A6,$A7,$00,$08,$A6,$A7,$00,$1E
            .byte $A6,$A7,$00,$04,$A6,$A7,$A6,$A7
            .byte $A6,$00,$15,$A6,$A7,$24,$04,$A6
            .byte $A7,$A6,$A7,$A6,$00,$15,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$00,$15,$A6,$A7,$00,$0C,$A6
            .byte $A7,$00,$10,$A6,$A7,$00,$0C,$A6
            .byte $A7,$00,$10,$A6,$A7,$00,$04,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$00,$05,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $00,$04,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $28,$05,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$29,$05,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7
L1F0E:      .byte $A6,$A7
            .byte $A6,$A7,$2B,$06,$2A,$16,$00,$0A
            .byte $2A,$16,$00,$0A,$2A,$03,$00,$10
            .byte $2A,$03,$00,$1D,$2A,$03,$A6,$A7
            .byte $A6,$A7,$00,$19,$2A,$03,$00,$15
            .byte $2C,$04,$00,$07,$00,$20,$00,$0A
            .byte $2C,$08,$00,$07,$2A,$07,$00,$19
            .byte $2A,$07,$00,$1E,$2A,$02,$00,$1E
            .byte $2A,$02,$00,$1E,$2A,$02,$00,$1E
            .byte $2A,$02,$00,$1E,$2A,$02,$00,$1E
            .byte $2A,$02,$A6,$A7,$A6,$A7,$00,$06
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$00
            .byte $0D,$2A,$02,$A6,$A7,$A6,$A7,$28
            .byte $06,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $24,$02,$00,$05,$2A,$08,$A6,$A7
            .byte $A6,$A7,$29,$06,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$00,$05,$2A
            .byte $08
L1F91:      .byte $A6,$A7,$A6,$A7,$29,$06,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $00,$05,$2A,$08,$00,$02,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$00
            .byte $05,$2A,$08,$00,$02,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$00,$0A
            .byte $2A,$03,$00,$11,$A7,$A6,$A7,$A6
            .byte $00,$08,$2A,$03,$00,$11,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$00,$05,$2A
            .byte $03,$00,$1F,$AA,$00,$1F,$AA,$2A
            .byte $03,$00,$05,$2A,$03,$00,$0F,$2A
            .byte $06,$2A,$03,$28,$05,$2A,$04,$00
            .byte $0D,$2A,$07,$2A,$03,$29,$05,$2A
            .byte $05,$00,$0B,$2A,$08,$2A,$1B,$00
            .byte $05,$00,$13,$2A,$02,$00,$0B,$00
            .byte $13,$2A,$02,$00,$0B,$00,$13,$2A
            .byte $04,$00,$09,$00,$09,$AA,$00,$16
            .byte $00,$09,$2A,$02,$00,$15,$00,$09
            .byte $2A,$02,$00,$04,$2A,$11,$2A,$0C
            .byte $00,$03,$2A,$11
L203C:      .byte $A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$00,$0F
            .byte $A7,$A6,$00,$04,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$00,$03,$A6,$A7,$00,$0F
            .byte $A7,$A6,$00,$07,$AE,$00,$05,$A6
            .byte $A7,$00,$0F,$A7,$A6,$00,$0D,$A6
            .byte $A7,$00,$0F,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$00,$08,$A6,$A7,$00,$1E
            .byte $A6,$A7,$00,$18,$B0,$00,$05,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$2A,$0C,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$2A
            .byte $0E,$00,$19,$2A,$07,$00,$20,$00
            .byte $20,$00,$20,$00,$04,$A7,$A6,$A7
            .byte $00,$04,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$00,$0D,$A6,$00,$1F,$A6
            .byte $00,$1F,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$00,$04,$A7,$A6,$A7,$2A,$08
            .byte $00,$0A,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$28,$04,$A7,$A6,$A7,$A6,$A7
            .byte $2A,$10
L2102:      .byte $2A,$02,$00,$05,$2A,$07
            .byte $00,$09,$2A,$09,$2A,$02,$00,$15
            .byte $2A,$09,$2A,$02,$00,$16,$2B,$05
            .byte $2A,$03,$2A,$02,$2C,$03,$00,$0D
            .byte $2C,$03,$00,$08,$2A,$03,$2A,$02
            .byte $00,$1B,$2A,$03,$2A,$02,$00,$06
            .byte $2C,$04,$00,$13,$AA,$2A,$02,$00
            .byte $0F,$2C,$0A,$00,$04,$AA,$2A,$02
            .byte $00,$1D,$AA,$2A,$02,$00,$1D,$AA
            .byte $2A,$02,$00,$04,$24,$02,$00,$13
            .byte $2C,$04,$AA,$00,$05,$2C,$04,$00
            .byte $16,$AA,$00,$1F,$AA,$00,$16,$2C
            .byte $09,$AA,$00,$0A,$2C,$06,$00,$0F
            .byte $AA,$00,$1F,$AA,$00,$10,$24,$06
            .byte $00,$09,$AA,$2A,$20,$2A,$20
L2177:      .byte $2A
            .byte $05,$00,$02,$2A,$03,$00,$09,$2A
            .byte $07,$00,$05,$AA,$2A,$05,$00,$02
            .byte $2A,$03,$00,$09,$2A,$07,$00,$05
            .byte $AA,$2A,$05,$00,$02,$2A,$03,$00
            .byte $06,$2A,$0A,$00,$05,$AA,$2A,$05
            .byte $00,$02,$2A,$03,$00,$07,$2B,$03
            .byte $00,$0A,$AC,$AA,$2A,$05,$00,$02
            .byte $2A,$03,$00,$15,$AA,$00,$1F,$AA
            .byte $00,$1A,$AC,$00,$04,$AA,$2A,$0B
            .byte $00,$05,$2A,$02,$00,$0D,$AA,$2A
            .byte $0B,$24,$05,$2A,$02,$00,$03,$2C
            .byte $02,$00,$08,$AA,$2A,$02,$00,$05
            .byte $2A,$0B,$00,$0A,$2C,$02,$80,$AA
            .byte $2A,$02,$00,$1D,$AA,$2A,$02,$00
            .byte $1D,$AA,$2A,$02,$00,$15,$2C,$03
            .byte $00,$05,$AA,$2A,$02,$00,$0F,$2C
            .byte $03,$00,$0B,$AA,$2A,$02,$2C,$03
            .byte $00,$1A,$AA,$2A,$02,$00,$09,$2C
            .byte $02,$00,$0F,$2C,$03,$AA,$2A,$02
            .byte $00,$1D,$AA,$2A,$02,$2C,$03,$00
            .byte $02,$2A,$07,$00,$09,$2A,$09
L221F:      .byte $A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $00,$1E,$A6,$A7,$00,$1E,$A6,$A7
            .byte $00,$1E,$A6,$A7,$00,$1C,$A6,$A7
            .byte $A6,$A7,$A6,$00,$03,$A6,$A7,$00
            .byte $02,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$00,$0D,$A6,$A7,$00,$1E
            .byte $A6,$A7,$00,$11,$A4,$00,$06,$A6
            .byte $A7,$00,$04,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$2C,$02,$A6,$00,$07
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$00,$05,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$2A,$05,$00,$0F,$AA,$00,$05
            .byte $AA,$A7,$A6,$A7,$2A,$09,$AF,$00
            .byte $0B,$B1,$AA,$00,$05,$AA,$A7,$A6
            .byte $2A,$08,$00,$0F,$AA,$00,$04,$2A
            .byte $02,$2A,$0A,$00,$0F,$AA,$00,$03
            .byte $2A,$03,$AA,$00,$0D,$2A,$02,$00
            .byte $0F,$AA,$AA,$00,$1E,$AA,$AA,$00
            .byte $1E,$AA,$AA,$00,$12,$2A,$07,$00
            .byte $05,$AA,$2A,$05,$00,$02,$2A,$03
            .byte $00,$09,$2A,$07,$00,$05,$AA
L22DF:      .byte $A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $A7,$A6,$A7,$A6,$A7,$A6,$A7,$A6
            .byte $00,$1E,$A7,$A6,$00,$1E,$A7,$A6
            .byte $00,$1E,$A7,$A6,$00,$1E,$A7,$A6
            .byte $00,$16,$2C,$04,$00,$04,$A7,$A6
            .byte $00,$0D,$2C,$04,$00,$0D,$A7,$A6
            .byte $00,$1E,$A7,$A6,$00,$06,$2C,$02
            .byte $00,$16,$A7,$A6,$00,$0F,$24,$02
            .byte $00,$0E,$A6,$00,$0E,$2C,$03,$00
            .byte $05,$A4,$00,$08,$A6,$80,$2C,$04
            .byte $00,$11,$2C,$04,$00,$05,$A6,$00
            .byte $1F,$A6,$00,$1F,$A6,$00,$04,$A7
            .byte $A6,$A7,$00,$10,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$00,$04,$A7
            .byte $A6,$A7,$28,$10,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$29,$10,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7,$A6,$A7
            .byte $A6,$A7,$A6,$A7,$A6,$A7
L239E:      .byte $2D,$0C
            .byte $00,$03,$2D,$11,$00,$1F,$AD,$00
            .byte $1F,$AD,$2D,$07,$00,$03,$2D,$05
            .byte $00,$10,$AD,$AD,$00,$09,$2D,$0A
            .byte $00,$0B,$AD,$AD,$00,$09,$2D,$0F
            .byte $00,$06,$AD,$AD,$00,$1E,$AD,$AD
            .byte $00,$1C,$2D,$03,$AD,$00,$1A,$2D
            .byte $05,$AD,$00,$18,$2D,$07,$AD,$00
            .byte $0C,$A4,$00,$09,$2D,$09,$AD,$00
            .byte $02,$2D,$04,$00,$04,$2D,$06,$00
            .byte $04,$2D,$0B,$AD,$00,$1E,$AD,$AD
            .byte $00,$1E,$AD,$2D,$04,$00,$1B,$AD
            .byte $00,$0B,$2D,$06,$00,$0E,$AD,$00
            .byte $0B,$2D,$06,$A4,$00,$0D,$AD,$2D
            .byte $1B,$00,$04,$AD
L240C:      .byte $2D,$20,$00,$20
            .byte $00,$20,$00,$0D,$2D,$04,$AF,$00
            .byte $06,$B1,$2D,$07,$00,$0D,$2D,$04
            .byte $00,$08,$AD,$00,$05,$AD,$05,$06
            .byte $00,$04,$2D,$07,$00,$08,$AD,$00
            .byte $05,$AD,$00,$16,$2D,$04,$00,$05
            .byte $AD,$00,$1F,$AD,$00,$1F,$AD,$00
            .byte $0F,$05,$03,$00,$09,$05,$02,$00
            .byte $02,$AD,$00,$1F,$AD,$00,$1F,$AD
            .byte $00,$0D,$AD,$05,$09,$00,$08,$AD
            .byte $00,$0D,$AD,$00,$11,$AD,$2D,$0E
            .byte $00,$11,$AD,$00,$20,$00,$20,$2D
            .byte $20
L2469:      .byte $2D,$20,$00,$0D,$2B,$03,$00
            .byte $10,$00,$20,$00,$20,$00,$20,$2D
            .byte $05,$00,$10,$05,$0B,$00,$0D,$05
            .byte $03,$00,$10,$00,$20,$00,$06,$05
            .byte $03,$00,$17,$00,$20,$00,$13,$24
            .byte $02,$00,$0B,$00,$08,$2D,$12,$00
            .byte $06,$00,$10,$AE,$00,$08,$AD,$00
            .byte $06,$00,$19,$AD,$00,$06,$00,$03
            .byte $05,$02,$00,$14,$2D,$07,$00,$20
            .byte $00,$10,$B0,$00,$0F,$2D,$20
L24B7:      .byte $36
            .byte $0D,$2D,$0E,$00,$04,$AD,$00,$0D
            .byte $AD,$2B,$0A,$00,$07,$AD,$00,$0D
            .byte $AD,$00,$11,$AD,$00,$0D,$AD,$00
            .byte $0D,$2D,$05,$B6,$37,$09,$00,$03
            .byte $AD,$00,$11,$AD,$B6,$00,$0C,$AD
            .byte $00,$11,$AD,$B6,$00,$0C,$AD,$00
            .byte $07,$36,$03,$00,$07,$B6,$B6,$00
            .byte $06,$37,$06,$B6,$00,$11,$B6,$B6
            .byte $00,$0C,$B6,$00,$11,$B6,$36,$03
            .byte $00,$0A,$B6,$00,$0C,$36,$03,$00
            .byte $02,$B6,$B6,$00,$0C,$B6,$00,$11
            .byte $B6,$B6,$00,$0C,$B6,$00,$11,$B6
            .byte $B6,$00,$02,$37,$02,$00,$08,$B6
            .byte $00,$07,$36,$03,$00,$07,$B6,$B6
            .byte $00,$0C,$B6,$00,$11,$B6,$B6,$00
            .byte $08,$37,$04,$36,$04,$00,$0E,$B6
            .byte $B6,$00,$1E,$B6,$B6,$00,$1E,$B6
            .byte $36,$20
L2542:      .byte $36,$20,$00,$20,$00,$20
            .byte $00,$20,$B6,$00,$02,$36,$05,$00
            .byte $06,$36,$03,$00,$02,$36,$05,$00
            .byte $02,$36,$06,$B6,$00,$02,$36,$05
            .byte $00,$03,$36,$06,$00,$02,$36,$05
            .byte $00,$02,$36,$06,$B6,$00,$02,$36
            .byte $02,$00,$0E,$36,$05,$00,$02,$36
            .byte $06,$B6,$00,$02,$36,$02,$00,$0E
            .byte $36,$05,$00,$02,$36,$06,$B6,$00
            .byte $02,$36,$02,$00,$02,$37,$05,$B6
            .byte $00,$02,$36,$09,$00,$02,$36,$06
            .byte $B6,$00,$02,$36,$02,$00,$07,$B6
            .byte $00,$02,$36,$09,$00,$02,$36,$06
            .byte $B6,$00,$02,$36,$02,$00,$07,$B6
            .byte $00,$02,$36,$09,$00,$02,$36,$06
            .byte $B6,$00,$02,$36,$02,$00,$02,$37
            .byte $05,$B6,$00,$02,$36,$09,$00,$02
            .byte $36,$06,$B6,$00,$02,$36,$02,$00
            .byte $07,$B6,$00,$02,$B6,$00,$07,$B6
            .byte $00,$02,$36,$06,$B6,$00,$02,$36
            .byte $02,$00,$07,$B6,$00,$02,$B6,$00
            .byte $07,$B6,$00,$02,$36,$06,$B6,$00
            .byte $02,$36,$02,$00,$02,$37,$05,$B6
            .byte $00,$02,$B6,$00,$07,$B6,$00,$02
            .byte $36,$06,$00,$1D,$B2,$B3,$B6,$00
            .byte $1D,$B4,$B5,$B6,$36,$20
L260E:      .byte $36,$20
            .byte $00,$16,$AE,$00,$09,$00,$20,$00
            .byte $20,$00,$1B,$36,$05,$00,$0B,$37
            .byte $03,$00,$08,$B0,$00,$04,$36,$05
            .byte $00,$03,$37,$04,$00,$0C,$36,$04
            .byte $00,$04,$36,$05,$00,$13,$36,$04
            .byte $00,$04,$36,$05,$00,$1B,$36,$05
            .byte $37,$09,$00,$12,$36,$05,$00,$1E
            .byte $36,$02,$00,$0D,$37,$03,$00,$0E
            .byte $36,$02,$00,$13,$36,$09,$00,$02
            .byte $36,$02,$00,$1A,$36,$02,$00,$02
            .byte $36,$02,$00,$10,$37,$02,$00,$08
            .byte $36,$02,$00,$02,$36,$02,$00,$1A
            .byte $36,$02,$00,$04,$00,$1A,$36,$02
            .byte $00,$04,$36,$20
L267C:      .byte $36,$13,$00,$05
            .byte $36,$08,$00,$20,$00,$20,$00,$12
            .byte $37,$07,$00,$07,$00,$20,$00,$20
            .byte $00,$0D,$36,$05,$00,$0E,$00,$0D
            .byte $36,$05,$00,$0E,$00,$0D,$36,$05
            .byte $00,$0E,$00,$0B,$36,$09,$00,$08
            .byte $37,$04,$00,$09,$36,$07,$00,$10
            .byte $00,$07,$36,$09,$00,$04,$37,$02
            .byte $00,$0A,$36,$10,$00,$10,$00,$18
            .byte $37,$02,$00,$06,$00,$20,$00,$02
            .byte $37,$0A,$00,$0A,$37,$02,$00,$08
            .byte $00,$20,$36,$20
L26D4:      .byte $2D,$20,$AD,$00
            .byte $1F,$AD,$00,$1F,$AD,$00,$08,$2D
            .byte $03,$00,$14,$AD,$00,$08,$2D,$03
            .byte $24,$03,$00,$11,$AD,$05,$05,$00
            .byte $03,$2D,$06,$00,$0D,$2D,$04,$AD
            .byte $00,$1F,$00,$16,$05,$04,$00,$06
            .byte $00,$04,$05,$02,$00,$1A,$00,$10
            .byte $05,$03,$00,$0D,$00,$18,$2D,$04
            .byte $00,$04,$2D,$06,$AF,$00,$0C,$B1
            .byte $2D,$08,$00,$04,$00,$02,$2B,$03
            .byte $00,$0F,$2D,$08,$00,$04,$00,$20
            .byte $00,$20,$00,$20,$00,$20,$2D,$13
            .byte $00,$05,$2D,$08
L2734:      .byte $2D,$20,$00,$06
            .byte $2D,$04,$00,$15,$AD,$00,$06,$2D
            .byte $04,$00,$15,$AD,$00,$06,$2D,$04
            .byte $00,$15,$AD,$00,$06,$2D,$04,$00
            .byte $15,$AD,$00,$06,$2D,$04,$00,$15
            .byte $AD,$00,$06,$2D,$04,$00,$15,$AD
            .byte $00,$06,$2D,$04,$00,$16,$00,$07
            .byte $AE,$00,$18,$00,$13,$2D,$05,$00
            .byte $08,$00,$13,$2D,$05,$A4,$00,$07
            .byte $00,$0A,$05,$03,$00,$06,$2D,$0D
            .byte $00,$07,$B0,$00,$18,$00,$06,$2D
            .byte $04,$00,$16,$00,$04,$05,$02,$2D
            .byte $04,$00,$04,$05,$0C,$00,$06,$00
            .byte $06,$2D,$04,$00,$16,$00,$06,$2D
            .byte $04,$00,$16,$2D,$20
L27A5:      .byte $36,$20,$B6
            .byte $00,$1F,$B6,$00,$1F,$B6,$00,$1F
            .byte $00,$20,$00,$20,$B6,$37,$10,$00
            .byte $0F,$B6,$00,$1F,$B6,$00,$1F,$B6
            .byte $00,$14,$37,$02,$B6,$00,$08,$B6
            .byte $00,$07,$36,$04,$00,$0B,$B6,$00
            .byte $08,$B6,$00,$0A,$B6,$00,$05,$37
            .byte $02,$00,$04,$B6,$00,$08,$B6,$00
            .byte $0A,$B6,$00,$0B,$B6,$37,$08,$36
            .byte $09,$00,$02,$B6,$00,$14,$B6,$00
            .byte $0A,$B6,$37,$03,$00,$11,$B6,$00
            .byte $1F,$B6,$00,$0E,$24,$03,$00,$0E
            .byte $36,$20
L2802:      .byte $2D,$20,$AD,$00,$0E,$AE
            .byte $00,$10,$AD,$00,$1F,$AD,$00,$1F
            .byte $AD,$00,$1F,$AD,$00,$1F,$AD,$00
            .byte $0E,$B0,$00,$10,$AD,$00,$05,$05
            .byte $07,$00,$02,$AD,$00,$10,$AD,$00
            .byte $0E,$AD,$00,$10,$AD,$00,$0E,$2D
            .byte $06,$00,$0B,$AD,$00,$02,$05,$08
            .byte $00,$04,$AD,$00,$10,$AD,$00,$0E
            .byte $AD,$00,$10,$AD,$00,$0E,$AD,$00
            .byte $05,$2D,$05,$00,$06,$AD,$00,$05
            .byte $05,$07,$00,$02,$AD,$00,$10,$AD
            .byte $00,$0E,$AD,$05,$03,$00,$0D,$AD
            .byte $00,$03,$05,$03,$00,$08,$AD,$00
            .byte $10,$AD,$24,$02,$00,$0C,$AD,$00
            .byte $10,$2D,$07,$00,$08,$2D,$11
L2877:      .byte $2D
            .byte $07,$00,$08,$2D,$11,$AD,$00,$0E
            .byte $2D,$04,$00,$0A,$2D,$03,$AD,$00
            .byte $0E,$2D,$04,$00,$0A,$2D,$03,$00
            .byte $08,$05,$07,$2D,$04,$00,$0A,$2D
            .byte $03,$00,$20,$00,$20,$AD,$05,$07
            .byte $00,$07,$2D,$11,$AD,$00,$1E,$AD
            .byte $AD,$00,$1E,$AD,$AD,$00,$02,$05
            .byte $08,$00,$14,$AD,$AD,$00,$0E,$2D
            .byte $06,$00,$0A,$AD,$AD,$00,$0C,$05
            .byte $02,$2D,$06,$00,$05,$2D,$06,$AD
            .byte $00,$0E,$2D,$06,$05,$02,$00,$03
            .byte $2D,$06,$AD,$00,$02,$05,$08,$2D
            .byte $07,$00,$08,$2D,$06,$00,$0B,$2D
            .byte $05,$00,$08,$05,$02,$2D,$06,$00
            .byte $0B,$2D,$05,$00,$0A,$2D,$06,$00
            .byte $0B,$2D,$05,$00,$0A,$2D,$06,$2D
            .byte $07,$00,$04,$2D,$05,$00,$08,$2D
            .byte $08
L2901:      .byte $2D,$20,$AD,$00,$1E,$AD,$AD
            .byte $00,$1E,$AD,$AD,$00,$1F,$AD,$00
            .byte $1F,$AD,$00,$1F,$AD,$00,$05,$2D
            .byte $06,$00,$04,$2D,$07,$00,$04,$2D
            .byte $05,$AD,$00,$12,$AE,$00,$0B,$AD
            .byte $AD,$00,$1E,$AD,$AD,$05,$04,$00
            .byte $1A,$AD,$AD,$00,$1E,$AD,$AD,$00
            .byte $12,$B0,$00,$0B,$AD,$AD,$00,$05
            .byte $05,$06,$00,$04,$2D,$07,$00,$08
            .byte $AD,$AD,$00,$0F,$2D,$07,$00,$08
            .byte $AD,$AD,$00,$0F,$2D,$07,$00,$04
            .byte $05,$02,$00,$03,$AD,$00,$0F,$2D
            .byte $07,$00,$09,$AD,$24,$0F,$2D,$07
            .byte $00,$09,$2D,$20
L296C:      .byte $3E,$07,$00,$04
            .byte $3E,$05,$00,$08,$3E,$08,$3E,$02
            .byte $00,$09,$3E,$05,$00,$08,$3E,$05
            .byte $00,$03,$3E,$02,$00,$09,$3E,$05
            .byte $00,$08,$3E,$05,$00,$03,$3E,$02
            .byte $00,$07,$3E,$0B,$00,$04,$3E,$03
            .byte $00,$05,$3E,$02,$00,$05,$3E,$0B
            .byte $00,$06,$3E,$03,$00,$05,$3E,$04
            .byte $00,$07,$3E,$07,$00,$06,$3E,$03
            .byte $00,$05,$3E,$02,$00,$09,$3E,$07
            .byte $3F,$04,$3E,$03,$00,$05,$3E,$02
            .byte $3E,$02,$00,$09,$3E,$05,$00,$0D
            .byte $3E,$03,$3E,$07,$00,$04,$3E,$05
            .byte $00,$0B,$3E,$05,$3E,$04,$00,$07
            .byte $3E,$15,$3E,$04,$00,$07,$3E,$10
            .byte $00,$05,$3E,$04,$00,$04,$3E,$08
            .byte $00,$10,$3E,$04,$00,$1C,$3E,$04
            .byte $00,$1C,$3E,$06,$00,$1A,$3E,$06
            .byte $00,$08,$3E,$12,$3E,$20,$3E,$20
L2A00:      .byte $3E,$20,$00,$20,$00,$20,$00,$20
            .byte $00,$20,$00,$20,$3E,$20,$3E,$20
            .byte $3E,$20,$3E,$20,$00,$20,$00,$20
            .byte $00,$20,$00,$20,$00,$20,$3E,$20
            .byte $3E,$20,$3E,$20
L2A24:      .byte $3E,$20,$00,$03
            .byte $3E,$0E,$00,$06,$3E,$06,$00,$03
            .byte $00,$1B,$3E,$02,$00,$03,$00,$1B
            .byte $3E,$02,$00,$03,$00,$12,$3E,$05
            .byte $00,$04,$3E,$02,$00,$03,$00,$12
            .byte $3E,$07,$00,$02,$3E,$02,$00,$03
            .byte $3E,$08,$00,$0A,$3E,$07,$00,$02
            .byte $3E,$05,$3E,$0C,$00,$03,$3E,$0A
            .byte $00,$02,$3E,$05,$3E,$0C,$00,$03
            .byte $3E,$05,$00,$02,$3E,$0A,$3E,$0C
            .byte $00,$03,$3E,$05,$00,$02,$3E,$0A
            .byte $00,$20,$00,$20,$00,$20,$00,$20
            .byte $00,$20,$3E,$19,$00,$03,$3E,$04
            .byte $3E,$19,$28,$03,$3E,$04,$3E,$19
            .byte $29,$03,$3E,$04
L2A94:      .byte $3E,$20,$00,$1D
            .byte $3E,$03,$00,$1D,$3E,$03,$00,$1D
            .byte $3E,$03,$00,$0A,$2C,$07,$00,$0C
            .byte $3E,$03,$00,$1D,$3E,$03,$3E,$04
            .byte $00,$19,$3E,$03,$3E,$04,$00,$0F
            .byte $2C,$04,$00,$06,$3E,$03,$3E,$04
            .byte $00,$19,$3E,$03,$3E,$04,$00,$0A
            .byte $2C,$03,$00,$0F,$00,$20,$00,$20
            .byte $00,$08,$2C,$05,$00,$13,$00,$20
            .byte $00,$20,$3E,$12,$00,$08,$3E,$06
            .byte $3E,$12,$00,$06,$3E,$08,$3E,$12
            .byte $00,$04,$3E,$0A
L2AEC:      .byte $3E,$20,$BE,$00
            .byte $1F,$BE,$00,$1F,$BE,$00,$1F,$BE
            .byte $00,$1F,$BE,$00,$1F,$BE,$00,$1F
            .byte $3E,$07,$00,$19,$3E,$07,$00,$19
            .byte $00,$05,$3E,$02,$00,$19,$00,$05
            .byte $3E,$02,$00,$19,$00,$05,$3E,$02
            .byte $00,$19,$00,$05,$3E,$02,$00,$19
            .byte $00,$05,$3E,$02,$00,$19,$00,$05
            .byte $3E,$02,$00,$19,$3E,$07,$00,$07
            .byte $3E,$12,$3E,$07,$00,$05,$3E,$14
            .byte $3E,$07,$00,$03,$3E,$16
L2B3E:      .byte $3E,$12
            .byte $00,$04,$3E,$0A,$BE,$00,$0E,$BE
            .byte $00,$0F,$BE,$BE,$00,$0E,$BE,$00
            .byte $0F,$BE,$BE,$00,$0E,$BE,$00,$02
            .byte $2C,$09,$00,$04,$BE,$BE,$00,$07
            .byte $3E,$02,$00,$05,$BE,$00,$0F,$BE
            .byte $BE,$00,$05,$3E,$04,$00,$15,$BE
            .byte $BE,$00,$08,$BE,$00,$0E,$3E,$08
            .byte $BE,$00,$08,$3E,$17,$3E,$04,$00
            .byte $05,$BE,$00,$16,$BE,$00,$08,$BE
            .byte $00,$16,$BE,$00,$08,$BE,$00,$09
            .byte $3E,$0D,$BE,$00,$05,$2C,$03,$BE
            .byte $00,$04,$2C,$05,$00,$0C,$BE,$BE
            .byte $00,$08,$BE,$00,$15,$BE,$BE,$00
            .byte $08,$BE,$00,$15,$BE,$BE,$2C,$04
            .byte $00,$04,$3E,$11,$00,$05,$BE,$BE
            .byte $00,$1E,$BE,$BE,$00,$1E,$BE,$3E
            .byte $20
L2BC1:      .byte $3E,$07,$00,$03,$3E,$16,$BE
            .byte $00,$1F,$BE,$00,$1F,$BE,$00,$04
            .byte $2C,$05,$00,$16,$BE,$00,$1F,$BE
            .byte $2C,$02,$00,$17,$3E,$06,$BE,$00
            .byte $19,$3E,$06,$BE,$00,$03,$2C,$03
            .byte $00,$17,$3E,$02,$00,$15,$2C,$05
            .byte $00,$04,$3E,$02,$00,$1E,$3E,$02
            .byte $3E,$02,$00,$11,$AC,$00,$0A,$3E
            .byte $02,$3E,$02,$00,$03,$2C,$03,$00
            .byte $12,$2C,$04,$3E,$02,$3E,$02,$00
            .byte $1C,$3E,$02,$3E,$02,$00,$1C,$3E
            .byte $02,$3E,$06,$2C,$14,$00,$04,$3E
            .byte $02,$3E,$06,$00,$18,$3E,$02,$3E
            .byte $06,$00,$18,$3E,$02,$3E,$20
L2C2F:      .byte $01
            .byte $05,$00,$1A,$81,$00,$1F,$81,$00
            .byte $1F,$81,$00,$09,$01,$02,$00,$11
            .byte $01,$04,$00,$1F,$81,$00,$03,$01
            .byte $02,$00,$1A,$81,$00,$03,$01,$02
            .byte $00,$1A,$81,$00,$07,$01,$05,$00
            .byte $05,$01,$07,$00,$07,$81,$00,$07
            .byte $01,$05,$00,$05,$01,$07,$00,$07
            .byte $81,$00,$07,$01,$05,$00,$10,$01
            .byte $04,$00,$1F,$81,$00,$1F,$81,$00
            .byte $15,$01,$05,$00,$05,$81,$00,$15
            .byte $01,$05,$00,$05,$81,$00,$1F,$81
            .byte $01,$07,$00,$15,$01,$04,$01,$07
            .byte $00,$15,$01,$04,$01,$07,$00,$03
            .byte $01,$16
L2C9A:      .byte $01,$07,$00,$03,$01,$16
            .byte $00,$06,$81,$00,$17,$01,$02,$00
            .byte $06,$81,$00,$17,$01,$02,$00,$06
            .byte $01,$06,$00,$12,$01,$02,$00,$1E
            .byte $01,$02,$01,$02,$00,$0E,$01,$06
            .byte $00,$08,$01,$02,$01,$02,$00,$0E
            .byte $01,$06,$00,$08,$01,$02,$01,$04
            .byte $00,$1A,$01,$02,$01,$06,$00,$16
            .byte $2C,$02,$01,$02,$01,$08,$00,$16
            .byte $01,$02,$01,$0A,$00,$14,$01,$02
            .byte $01,$0C,$00,$10,$2C,$02,$01,$02
            .byte $01,$0E,$00,$10,$01,$02,$01,$10
            .byte $00,$0E,$01,$02,$01,$12,$00,$0A
            .byte $2C,$02,$01,$02,$01,$14,$00,$0A
            .byte $01,$02,$01,$16,$00,$08,$01,$02
            .byte $01,$20
L2D12:      .byte $01,$20,$01,$05,$00,$07
            .byte $01,$14,$81,$00,$1E,$81,$81,$00
            .byte $1E,$81,$81,$00,$1E,$81,$81,$00
            .byte $1E,$81,$81,$00,$03,$01,$17,$00
            .byte $04,$81,$81,$00,$0A,$01,$02,$00
            .byte $12,$81,$01,$02,$00,$09,$01,$02
            .byte $00,$12,$81,$81,$00,$0A,$01,$02
            .byte $00,$06,$01,$09,$00,$02,$01,$02
            .byte $81,$00,$0A,$01,$02,$00,$12,$81
            .byte $01,$03,$00,$08,$01,$05,$00,$0F
            .byte $81,$81,$00,$0A,$01,$02,$00,$12
            .byte $81,$81,$00,$0A,$01,$02,$00,$12
            .byte $81,$01,$04,$00,$07,$01,$02,$00
            .byte $12,$81,$81,$00,$0A,$01,$05,$00
            .byte $03,$01,$09,$00,$02,$01,$02,$81
            .byte $00,$1E,$81,$01,$05,$00,$1A,$81
L2D90:      .byte $A2,$00,$14,$A0,$00,$0A,$00,$02
            .byte $A1,$00,$1B,$A2,$80,$00,$11,$A1
            .byte $00,$07,$8E,$8F,$90,$00,$04,$00
            .byte $08,$A0,$00,$10,$91,$92,$93,$00
            .byte $04,$00,$12,$A0,$00,$06,$94,$95
            .byte $96,$00,$04,$00,$20,$A0,$00,$15
            .byte $A1,$A2,$00,$08,$97,$98,$19,$05
            .byte $9A,$9B,$80,$97,$98,$19,$05,$9A
            .byte $9B,$00,$09,$A0,$00,$03,$9C,$00
            .byte $07,$9D,$80,$9C,$00,$07,$9D,$00
            .byte $08,$A2,$00,$04,$9E,$00,$07,$9F
            .byte $80,$9E,$00,$07,$9F,$00,$0D,$84
            .byte $00,$03,$84,$00,$03,$04,$03,$00
            .byte $07,$04,$0E,$84,$00,$02,$82,$84
            .byte $82,$00,$19,$84,$84,$00,$03,$84
            .byte $00,$1A,$84,$84,$00,$03,$84,$00
            .byte $06,$84,$00,$04,$02,$02,$04,$06
            .byte $00,$07,$84,$84,$82,$00,$02,$04
            .byte $08,$00,$06,$84,$00,$05,$02,$03
            .byte $00,$04,$84,$84,$00,$11,$84,$00
            .byte $0A,$02,$02,$84,$84,$00,$11,$84
            .byte $00,$0C,$84,$04,$10,$00,$02,$04
            .byte $04,$00,$02,$04,$08
L2E45:      .byte $A2,$00,$14
            .byte $A0,$00,$0A,$00,$02,$A1,$00,$1B
            .byte $A2,$80,$00,$11,$A1,$00,$07,$8E
            .byte $8F,$90,$00,$04,$00,$08,$A0,$00
            .byte $10,$91,$92,$93,$00,$04,$00,$12
            .byte $A0,$00,$06,$94,$95,$96,$00,$04
            .byte $00,$20,$A0,$00,$15,$A1,$A2,$00
            .byte $08,$01,$20,$01,$06,$00,$08,$01
            .byte $02,$00,$0F,$81,$01,$06,$00,$08
            .byte $01,$02,$00,$0A,$8A,$8B,$00,$03
            .byte $81,$81,$00,$19,$8C,$8D,$00,$03
            .byte $81,$81,$00,$18,$01,$04,$00,$02
            .byte $81,$81,$00,$08,$05,$02,$00,$09
            .byte $05,$03,$00,$05,$81,$00,$02,$81
            .byte $81,$00,$0D,$05,$02,$00,$0C,$81
            .byte $00,$02,$81,$81,$00,$02,$05,$03
            .byte $00,$14,$01,$06,$81,$00,$19,$01
            .byte $06,$81,$00,$19,$01,$06,$01,$0E
            .byte $00,$04,$01,$0E

;------------------------------------------------
; Room pointers
;------------------------------------------------

L2ED4:      .byte <L1780
L2ED5:      .byte >L1780
            .word L1809,L1881,L18FA,L197A
            .word L19EE,L1A92,L1B47,L1C15
            .word L1CF1,L1E0E,L1F0E,L1F91
            .word L203C,L2102,L2177,L221F
            .word L22DF,L239E,L240C,L2469
            .word L24B7,L2542,L260E,L267C
            .word L26D4,L2734,L27A5,L2802
            .word L2877,L2901,L296C,L2A00
            .word L2A24,L2A94,L2AEC,L2B3E
            .word L2BC1,L2C2F,L2C9A,L2D12
            .word L2D90,L2E45

;------------------------------------------------
; Room map
;------------------------------------------------

L2F2A:      .byte $FF,$FF,$FF,$2A,$FF,$FF,$FF,$FF
            .byte $29,$00,$01,$02,$08,$09,$FF,$10
            .byte $04,$03,$05,$06,$07,$0A,$0B,$0F
            .byte $FF,$FF,$FF,$FF,$11,$0D,$0C,$0E
            .byte $FF,$1C,$1A,$19,$14,$13,$12,$FF
            .byte $1E,$1D,$1B,$18,$17,$16,$15,$28
            .byte $FF,$1F,$20,$21,$20,$22,$23,$26
            .byte $FF,$FF,$FF,$FF,$FF,$24,$25,$27
            .byte $0D,$09,$CE,$1E

;------------------------------------------------

L2F6E:      .byte $00,$02,$01,$02,$02,$01,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$02,$02
            .byte $02,$02,$02,$02,$02,$02,$02,$02
            .byte $02,$02,$02,$02,$02,$02,$02,$02
            .byte $00,$00,$00,$02,$03,$04,$02,$02
            .byte $03,$03,$02,$03,$01,$02,$02,$02
            .byte $02,$02,$05,$05,$05,$05,$02,$01
            .byte $06,$02,$00,$00,$02,$00,$02,$02
            .byte $07,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$6F,$6D,$0D,$09,$E2
            .byte $0E,$2E

;------------------------------------------------
; Item sprite data
;------------------------------------------------

L2FC0:      .byte $00,$00,$7F,$FF,$FF,$FE,$FE,$FE	; Door card
            .byte $00,$00,$FE,$FF,$1F,$4F,$4F,$1F
            .byte $FC,$F9,$F0,$F9,$FF,$7F,$00,$00
            .byte $FF,$FF,$FF,$FF,$FF,$FE,$00,$00

            .byte $00,$01,$07,$0F,$1F,$1F,$3F,$3F	; Oxygen tank
            .byte $00,$C0,$F0,$F8,$FC,$FC,$FE,$FE
            .byte $3F,$3F,$3F,$0E,$1F,$1F,$00,$00
            .byte $FE,$FE,$FE,$38,$7C,$7C,$00,$00

            .byte $00,$00,$E0,$FF,$FF,$FF,$6F,$36	; Water pistol
            .byte $00,$00,$06,$FF,$FF,$C4,$7E,$40
            .byte $2B,$35,$6B,$55,$6B,$7F,$00,$00
            .byte $C0,$00,$00,$00,$00,$80,$00,$00

            .byte $FF,$FF,$FC,$F3,$F4,$E8,$E8,$68	; Life shield
            .byte $FE,$FE,$7E,$9E,$5E,$2E,$2E,$2E
            .byte $74,$73,$3C,$3F,$1F,$0F,$07,$01
            .byte $5C,$9C,$7C,$F8,$F0,$E0,$C0,$00

            .byte $00,$3F,$73,$EB,$E8,$0F,$07,$0C	; Password
            .byte $00,$FC,$C6,$D7,$17,$F0,$E0,$30
            .byte $0B,$1B,$1C,$3F,$3F,$20,$3F,$00
            .byte $D0,$D8,$38,$FC,$FC,$04,$FC,$00

            .byte $00,$00,$00,$00,$00,$00,$01,$03	; Spanner
            .byte $3C,$70,$E1,$C1,$E3,$F7,$FE,$FC
            .byte $07,$0F,$1F,$3E,$7C,$F8,$F0,$70
            .byte $C0,$80,$00,$00,$00,$00,$00,$00

            .byte $0F,$0F,$1F,$1F,$3F,$3F,$7F,$7F	; Table lamp
            .byte $F0,$F0,$F8,$F8,$FC,$FC,$FE,$FE
            .byte $7F,$00,$07,$03,$07,$07,$07,$0F
            .byte $FE,$00,$E0,$C0,$E0,$E0,$E0,$F0

            .byte $E0,$E0,$E0,$E0,$E0,$E0,$FF,$FF	; Computer games
            .byte $07,$67,$67,$67,$67,$07,$FF,$FF
            .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
            .byte $FF,$FF,$FF,$FF,$FF,$FF,$FD,$FF

            .byte $18,$7E,$66,$C3,$C3,$66,$7F,$19	; Rusty key
            .byte $00,$00,$00,$00,$00,$00,$00,$80
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $C0,$60,$30,$38,$4C,$1E,$3C,$18

            .byte $00,$00,$00,$03,$03,$03,$1F,$1F	; First Aid box
            .byte $00,$00,$00,$C0,$C0,$C0,$F8,$F8
            .byte $1F,$1F,$03,$03,$03,$00,$00,$00
            .byte $F8,$F8,$C0,$C0,$C0,$00,$00,$00

;------------------------------------------------
; Item data
;
; Hi-nibble=
; Lo-nibble=Itemnr
;------------------------------------------------

L3100:      .byte $07,$2A,$03,$0D,$10,$11,$0A,$28
            .byte $00,$19

; X-pos items

L310A:      .byte $17,$1D,$07,$02,$1D,$18,$1B,$0E
            .byte $02,$02

; Y-pos items

L3114:      .byte $0C,$0C,$04,$05,$02,$03,$02,$0D
            .byte $03,$03

; Mark if item is taken ($ff)

L311E:      .byte $00	; Item 1
L311F:      .byte $00	; Item 2
            .byte $00	; Item 3
            .byte $00	; Item 4
L3122:      .byte $00	; Item 5
L3123:      .byte $00	; Item 6
            .byte $00	; Item 7
L3125:      .byte $00	; Item 8
L3126:      .byte $00	; Item 9
            .byte $00	; Item A

;------------------------------------------------
; Item names
;------------------------------------------------

L3128:      .byte "DOOR CARD       "	; Item 1
            .byte "OXYGEN TANK     "	; Item 2
            .byte "WATER PISTOL    "	; Item 3
            .byte "LIFE SHIELD     "	; Item 4
            .byte "PASSWORD        "	; Item 5
            .byte "SPANNER         "	; Item 6
            .byte "TABLE LAMP      "	; Item 7
            .byte "COMPUTER GAMES  "	; Item 8
            .byte "RUSTY KEY       "	; Item 9
            .byte "FIRST AID BOX   "	; Item A

;------------------------------------------------
; Enemy sprites
;------------------------------------------------

L31C8:      .byte $01,$80,$03,$C0,$03,$C0,$01,$80
            .byte $01,$80,$00,$00,$61,$86,$FB,$DF
            .byte $FB,$DF,$61,$86,$00,$00,$01,$80
            .byte $01,$80,$03,$C0,$03,$C0,$01,$80

            .byte $00,$00,$00,$70,$00,$78,$20,$70
            .byte $70,$E0,$78,$00,$79,$80,$0B,$C0
            .byte $03,$D0,$01,$9E,$00,$1E,$07,$0E
            .byte $0E,$04,$1E,$00,$0E,$00,$00,$00

            .byte $00,$00,$00,$00,$18,$18,$38,$1C
            .byte $3C,$3C,$0C,$30,$01,$80,$03,$C0
            .byte $03,$C0,$01,$80,$0C,$30,$3C,$3C
            .byte $38,$1C,$18,$18,$00,$00,$00,$00

            .byte $00,$00,$0E,$00,$1E,$00,$0E,$04
            .byte $07,$0E,$00,$1E,$01,$9E,$03,$D0
            .byte $0B,$C0,$79,$80,$78,$00,$70,$E0
            .byte $20,$70,$00,$78,$00,$70,$00,$00

            .byte $01,$80,$05,$A0,$07,$E0,$21,$84
            .byte $E0,$07,$7D,$BE,$47,$E2,$03,$C0
            .byte $01,$80,$07,$E0,$1E,$78,$3C,$3C
            .byte $18,$18,$1C,$38,$0C,$30,$3C,$3C

            .byte $00,$61,$C1,$69,$81,$F9,$80,$61
            .byte $00,$02,$17,$6C,$19,$F8,$3C,$F0
            .byte $20,$60,$01,$F8,$07,$9E,$0F,$0F
            .byte $9C,$03,$98,$01,$0C,$03,$FC,$03

            .byte $00,$18,$00,$5A,$00,$7E,$42,$18
            .byte $FE,$00,$E7,$DB,$24,$7E,$00,$3C
            .byte $00,$18,$00,$7E,$81,$E7,$C3,$C3
            .byte $81,$81,$81,$C3,$00,$C3,$C3,$C3

            .byte $00,$86,$83,$96,$81,$9F,$01,$86
            .byte $00,$40,$E8,$36,$98,$1F,$3C,$0F
            .byte $20,$06,$80,$1F,$E0,$79,$F0,$F0
            .byte $E0,$79,$80,$1F,$00,$0F,$C0,$3F

            .byte $1F,$18,$18,$E8,$37,$AC,$35,$EC
            .byte $17,$18,$18,$F8,$0F,$F0,$3D,$BC
            .byte $71,$8E,$E7,$E3,$C6,$67,$EC,$33
            .byte $CC,$32,$86,$60,$07,$E0,$01,$80

            .byte $07,$E6,$06,$3A,$0D,$EB,$0D,$7B
            .byte $05,$C6,$06,$3E,$03,$FC,$87,$6F
            .byte $DC,$73,$D8,$F8,$F0,$9D,$F1,$8E
            .byte $B9,$C6,$30,$E6,$30,$7E,$00,$18

            .byte $81,$8F,$81,$71,$C3,$5E,$C3,$7A
            .byte $81,$8E,$81,$F1,$00,$FF,$C3,$DB
            .byte $E7,$18,$7C,$7E,$3E,$66,$7C,$C3
            .byte $34,$C3,$10,$66,$00,$7E,$00,$18

            .byte $E0,$63,$60,$5C,$B0,$D7,$B0,$DE
            .byte $A0,$63,$60,$7C,$C0,$1F,$E1,$F6
            .byte $3B,$CE,$1B,$1F,$0F,$B9,$8F,$71
            .byte $9D,$63,$0C,$67,$0C,$7E,$00,$18

            .byte $00,$70,$01,$FC,$43,$FE,$03,$FE
            .byte $C1,$FC,$E1,$F0,$E1,$BD,$F0,$1F
            .byte $F0,$DF,$F3,$F7,$F3,$F3,$E7,$F9
            .byte $E7,$F9,$C3,$F0,$03,$F2,$00,$C0

            .byte $00,$70,$01,$F8,$C3,$FC,$C3,$FC
            .byte $01,$F8,$C1,$F0,$E3,$BF,$E3,$9F
            .byte $F0,$1F,$F3,$F3,$E7,$F9,$EF,$FD
            .byte $CF,$FC,$0F,$FC,$07,$F9,$03,$F0

            .byte $00,$00,$01,$F0,$43,$F8,$03,$F8
            .byte $C1,$F0,$E7,$F0,$E7,$DF,$F3,$9F
            .byte $F0,$1F,$F3,$F3,$F7,$FB,$EF,$FD
            .byte $EF,$FD,$CF,$FC,$07,$FC,$03,$F1

            .byte $00,$70,$01,$F8,$03,$FC,$C3,$FC
            .byte $E1,$F9,$E1,$F1,$F3,$9F,$F3,$9F
            .byte $F0,$DF,$F3,$F3,$F3,$F3,$F7,$FB
            .byte $E7,$F9,$E3,$F1,$C3,$F0,$00,$C2

            .byte $00,$60,$03,$90,$1C,$D0,$67,$48
            .byte $58,$24,$51,$94,$56,$52,$54,$2F
            .byte $54,$2F,$56,$52,$59,$94,$57,$28
            .byte $60,$C8,$1C,$10,$03,$90,$00,$60

            .byte $00,$00,$1F,$F8,$10,$08,$2F,$F4
            .byte $24,$14,$2B,$CC,$4A,$4A,$4C,$2A
            .byte $56,$26,$91,$4D,$88,$91,$66,$66
            .byte $19,$88,$05,$B0,$03,$C0,$01,$80

            .byte $0E,$00,$09,$C0,$12,$38,$17,$06
            .byte $28,$EA,$49,$9A,$52,$6A,$A4,$2A
            .byte $54,$2A,$4A,$6A,$29,$8A,$24,$1A
            .byte $12,$E6,$0B,$38,$09,$C0,$06,$00

            .byte $00,$80,$03,$60,$0C,$90,$11,$4C
            .byte $66,$33,$89,$89,$B2,$4D,$64,$2A
            .byte $54,$32,$52,$52,$33,$D4,$28,$24
            .byte $2F,$F4,$10,$08,$1F,$F8,$00,$00

            .byte $07,$E0,$1F,$E0,$1F,$F8,$3F,$FC
            .byte $3E,$FF,$78,$7F,$78,$1F,$F0,$1F
            .byte $F0,$1F,$F8,$1F,$7E,$7F,$7F,$FF
            .byte $3F,$FE,$3F,$FC,$3F,$F0,$03,$E0

            .byte $03,$FC,$03,$FE,$07,$FF,$0F,$FF
            .byte $8F,$FF,$FF,$0F,$FF,$0F,$FE,$07
            .byte $FC,$07,$FE,$0F,$BE,$0F,$9F,$9F
            .byte $9F,$FF,$87,$FF,$01,$FC,$00,$70

            .byte $00,$7C,$C0,$FF,$C3,$FF,$C7,$FF
            .byte $EF,$FF,$EF,$E7,$FF,$81,$FF,$80
            .byte $FF,$80,$EF,$81,$EF,$E1,$CF,$F7
            .byte $C3,$FF,$81,$FF,$80,$7F,$00,$7E

            .byte $00,$0E,$80,$3F,$E1,$FF,$F9,$FF
            .byte $F9,$F9,$7D,$F0,$7F,$F0,$3F,$E0
            .byte $7F,$E0,$FF,$F0,$FF,$F0,$F1,$FF
            .byte $F0,$FF,$E0,$FF,$C0,$7F,$C0,$3F

            .byte $03,$C0,$0F,$F0,$1F,$F8,$3F,$FC
            .byte $3F,$FC,$7F,$FE,$7F,$FE,$7F,$FE
            .byte $7F,$FE,$3F,$FC,$3F,$FC,$1F,$F8
            .byte $0F,$F0,$03,$C0,$00,$00,$00,$00

            .byte $03,$C0,$0F,$F0,$0F,$F0,$1F,$F8
            .byte $1F,$F8,$3F,$FC,$3F,$FC,$3F,$FC
            .byte $3F,$FC,$3F,$FC,$3F,$FC,$1F,$F8
            .byte $1F,$F8,$0F,$F0,$0F,$F0,$03,$C0

            .byte $03,$C0,$0F,$F0,$1F,$F8,$3F,$FC
            .byte $3F,$FC,$7F,$FE,$7F,$FE,$7F,$FE
            .byte $7F,$FE,$3F,$FC,$3F,$FC,$1F,$F8
            .byte $0F,$F0,$03,$C0,$00,$00,$00,$00

            .byte $0F,$F0,$3F,$FC,$7F,$FE,$7F,$FE
            .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
            .byte $7F,$FE,$7F,$FE,$3F,$FC,$0F,$F0
            .byte $00,$00,$00,$00,$00,$00,$00,$00

            .byte $FF,$FF,$80,$01,$80,$01,$BF,$F9
            .byte $BF,$F9,$80,$01,$BF,$F9,$BF,$F9
            .byte $80,$01,$BF,$F9,$BF,$F9,$80,$01
            .byte $BF,$F9,$BF,$F9,$80,$01,$FF,$FF

            .byte $FF,$FF,$60,$00,$60,$00,$6F,$FE
            .byte $6F,$FE,$60,$00,$6F,$FE,$6F,$FE
            .byte $60,$00,$6F,$FE,$6F,$FE,$60,$00
            .byte $6F,$FE,$6F,$FE,$60,$00,$FF,$FF

            .byte $FF,$FF,$18,$00,$18,$00,$9B,$FF
            .byte $9B,$FF,$18,$00,$9B,$FF,$9B,$FF
            .byte $18,$00,$9B,$FF,$9B,$FF,$18,$00
            .byte $9B,$FF,$9B,$FF,$18,$00,$FF,$FF

            .byte $FF,$FF,$06,$00,$06,$00,$E6,$FF
            .byte $E6,$FF,$06,$00,$E6,$FF,$E6,$FF
            .byte $06,$00,$E6,$FF,$E6,$FF,$06,$00
            .byte $E6,$FF,$E6,$FF,$06,$00,$FF,$FF

            .byte $00,$60,$00,$E0,$00,$E0,$71,$E0
            .byte $3F,$E0,$3F,$E0,$1F,$FC,$0F,$FF
            .byte $0F,$FF,$1F,$FC,$3F,$E0,$7F,$E0
            .byte $7C,$E0,$60,$E0,$00,$60,$00,$20

            .byte $00,$00,$38,$08,$3C,$38,$1E,$78
            .byte $1F,$F0,$1F,$F0,$0F,$F0,$0F,$F8
            .byte $3F,$FE,$7F,$FF,$FF,$FF,$03,$C0
            .byte $03,$C0,$03,$C0,$01,$80,$01,$80

            .byte $04,$00,$06,$00,$07,$06,$07,$3E
            .byte $07,$FC,$07,$FC,$3F,$F8,$FF,$F0
            .byte $FF,$F0,$3F,$F8,$07,$FC,$07,$FC
            .byte $07,$8E,$07,$00,$07,$00,$06,$00

            .byte $01,$80,$01,$80,$03,$C0,$03,$C0
            .byte $03,$C0,$FF,$FF,$FF,$FE,$7F,$FC
            .byte $1F,$F0,$0F,$F0,$0F,$F8,$0F,$F8
            .byte $1E,$78,$1C,$3C,$10,$0C,$00,$00

            .byte $07,$E0,$1F,$F8,$3D,$BC,$71,$8E
            .byte $61,$86,$E3,$C7,$C7,$E3,$FE,$7F
            .byte $FE,$7F,$C7,$E3,$E3,$C7,$61,$86
            .byte $71,$8E,$3D,$BC,$1F,$F8,$07,$E0

            .byte $07,$E0,$1F,$F8,$3C,$3C,$70,$6E
            .byte $60,$66,$FB,$C7,$DF,$E3,$C6,$63
            .byte $C6,$63,$C7,$FB,$E3,$DF,$66,$06
            .byte $76,$0E,$3C,$3C,$1F,$F8,$07,$E0

            .byte $07,$E0,$1F,$F8,$3C,$3C,$78,$1E
            .byte $7C,$3E,$EF,$F7,$C7,$E3,$C6,$63
            .byte $C6,$63,$C7,$E3,$EF,$F7,$7C,$3E
            .byte $78,$1E,$3C,$3C,$1F,$F8,$07,$E0

            .byte $07,$E0,$1F,$F8,$3C,$3C,$76,$0E
            .byte $66,$06,$E3,$DF,$C7,$FB,$C6,$63
            .byte $C6,$63,$DF,$E3,$FB,$C7,$60,$66
            .byte $70,$6E,$3C,$3C,$1F,$F8,$07,$E0

            .byte $07,$E0,$1F,$F8,$3C,$3C,$76,$0E
            .byte $66,$06,$E3,$DF,$C7,$FB,$C6,$63
            .byte $C6,$63,$DF,$E3,$FB,$C7,$60,$66
            .byte $70,$6E,$3C,$3C,$1F,$F8,$07,$E0

            .byte $01,$F8,$07,$FE,$0F,$6F,$9C,$63
            .byte $98,$61,$F8,$F1,$F1,$F8,$FF,$9F
            .byte $FF,$9F,$F1,$F8,$F8,$F1,$98,$61
            .byte $9C,$63,$0F,$6F,$07,$FE,$01,$F8

            .byte $00,$7E,$81,$FF,$C3,$C3,$E7,$06
            .byte $66,$06,$7F,$BC,$3D,$FE,$3C,$66
            .byte $3C,$66,$BC,$7F,$FE,$3D,$66,$60
            .byte $E7,$60,$C3,$C3,$81,$FF,$00,$7E

            .byte $80,$1F,$E0,$7F,$F0,$F0,$79,$E0
            .byte $F9,$F0,$DF,$BF,$8F,$1F,$8F,$19
            .byte $8F,$19,$8F,$1F,$DF,$BF,$F9,$F0
            .byte $79,$E0,$F0,$F0,$E0,$7F,$80,$1F

            .byte $07,$E0,$1F,$F8,$3F,$FC,$7D,$DE
            .byte $7A,$AE,$F8,$8F,$FD,$DF,$FF,$FF
            .byte $FE,$BF,$FF,$FF,$FC,$1F,$7E,$3E
            .byte $7F,$FE,$3F,$FC,$1F,$F8,$07,$E0

            .byte $01,$F8,$07,$FE,$0F,$FF,$9F,$77
            .byte $9E,$AB,$FE,$23,$FF,$77,$FF,$FF
            .byte $FF,$AF,$FF,$FF,$FF,$07,$9F,$8F
            .byte $9F,$FF,$0F,$FF,$07,$FE,$01,$F8

            .byte $00,$7E,$81,$FF,$C3,$FF,$E7,$DD
            .byte $E7,$AA,$FF,$88,$FF,$DD,$FF,$FF
            .byte $FF,$EB,$FF,$FF,$FF,$C1,$E7,$E3
            .byte $E7,$FF,$C3,$FF,$81,$FF,$00,$7E

            .byte $80,$1F,$E0,$7F,$F0,$FF,$79,$F7
            .byte $B9,$EA,$3F,$E2,$7F,$F7,$FF,$FF
            .byte $FF,$FA,$FF,$FF,$7F,$F0,$F9,$F8
            .byte $F9,$FF,$F0,$FF,$E0,$7F,$80,$1F

            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00

;--------------------------------------------

            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $00,$00,$00,$00,$00,$00,$00,$00


;--------------------------------------------
; Play tune
;--------------------------------------------

L3800:
	rts
            lda #<L384F               ; A9 4F
            sta L0070              ; 85 70
            lda #>L384F               ; A9 38
            sta L0071              ; 85 71

            ldy #$00               ; A0 00
L380A:      lda (L0070),Y          ; B1 70
            bne L380F              ; D0 01
            rts                    ; 60

L380F:      and #$03               ; 29 03
            sta L3932              ; 8D 32 39
            lda (L0070),Y          ; B1 70
            and #$FC               ; 29 FC
            sta L3936              ; 8D 36 39
            ldx #$01               ; A2 01
            cmp #$F8               ; C9 F8
            bne L3822              ; D0 01
            dex                    ; CA
L3822:      stx L3934              ; 8E 34 39
            iny                    ; C8
            lda (L0070),Y          ; B1 70
            asl A                  ; 0A
            sta L3938              ; 8D 38 39
            iny                    ; C8
            sty L0072              ; 84 72
            lda L3932              ; AD 32 39
            cmp #$03               ; C9 03
            bne L383B              ; D0 05

            lda #$00               ; A9 00
            jsr L383F              ; Play note

L383B:      ldy L0072              ; A4 72
            bne L380A              ; D0 CB

;--------------------------------------------
; Play sound
;--------------------------------------------

L383F:
	cmp #0
	bne chksnd1
	jmp sound0
chksnd1:
	cmp #1
	bne chksnd2
	jmp sound1
chksnd2:
	cmp #2
	beq sound2
	cmp #3
	beq sound3
	cmp #4
	beq sound4
	cmp #5
	beq sound5
	cmp #6
	beq sound6
	cmp #7
	beq sound7
	cmp #8
	beq sound8
sound9:			; Laserbeam
	lda $b002
	eor #4	
	sta $b002
	rts

	lda #1
	ldx #8
	ldy #1
	jsr sound

	lda #1
	ldx #8
	ldy #2
	jmp sound
sound8:			; Password ok
	rts
sound7:			; Land from jumping
	lda #10
	ldx #19
	ldy #7
	jmp sound
sound6:			; Land after falling
	lda #10
	ldx #19
	ldy #7
	jmp sound
sound5:			; Item taken
	lda #10
	ldx #19
	ldy #4
	jsr sound
	jsr $fe66

	lda #10
	ldx #19
	ldy #2
	jsr sound
	jsr $fe66

	lda #10
	ldx #19
	ldy #1
	jmp sound
sound4:			; Rotate
sound3:			; Rotate
sound2:			; Rotate
	lda #6
	ldx #10
	ldy #1
	jsr sound

	lda #8
	ldx #10
	ldy #5
	jsr sound

	lda #4
	ldx #10
	ldy #3
	jmp sound
sound1:			; Death
	lda #10
	sta $9c
snd1_loop:
	lda #3
	ldx #15
	ldy #5
	jsr sound

	lda #3
	ldx #15
	ldy #7
	jsr sound

	lda $b002
	eor #4	
	sta $b002

	dec $9c
	bne snd1_loop

	rts

sound0:			; Tune
	rts

;            asl A                  ; 0A
;            asl A                  ; 0A
;            asl A                  ; 0A
;            adc #<L3932               ; 69 32
;            tax                    ; AA
;            lda #$00               ; A9 00
;            adc #>L3932               ; 69 39
;            tay                    ; A8
;            lda #$07               ; Sound
;            jmp LFFF1              ; OSWORD

; Tune data

L384F:      .byte $11,$04
            .byte $52,$02,$5F,$02,$5E,$02,$73,$02
            .byte $2D,$04,$FA,$06,$FB,$06,$11,$04
            .byte $52,$02,$5F,$02,$21,$04,$72,$03
            .byte $83,$03,$6E,$01,$7B,$01,$25,$04
            .byte $66,$02,$73,$02,$56,$02,$67,$02
            .byte $21,$04,$FA,$0C,$FB,$0C,$19,$04
            .byte $25,$04,$2D,$04,$6E,$02,$7B,$02
            .byte $6E,$02,$7B,$02,$35,$04,$FA,$02
            .byte $FB,$02,$66,$02,$73,$02,$3D,$04
            .byte $5E,$03,$6F,$03,$66,$01,$73,$01
            .byte $2D,$04,$5E,$02,$6F,$02,$56,$02
            .byte $67,$02,$11,$04,$52,$02,$5F,$02
            .byte $42,$02,$53,$02,$19,$04,$FA,$06
            .byte $FB,$06,$21,$04,$42,$02,$53,$02
            .byte $2D,$04,$4A,$02,$57,$02,$4E,$02
            .byte $5B,$02,$11,$04,$52,$02,$5F,$02
            .byte $5E,$02,$73,$02,$2D,$04,$FA,$06
            .byte $FB,$06,$11,$04,$52,$02,$5F,$02
            .byte $21,$04,$72,$03,$83,$03,$6E,$01
            .byte $7B,$01,$25,$04,$66,$02,$73,$02
            .byte $56,$02,$67,$02,$21,$04,$FA,$0C
            .byte $FB,$0C,$19,$04,$25,$04,$2D,$04
            .byte $6E,$02,$7B,$02,$6E,$02,$7B,$02
            .byte $35,$04,$FA,$02,$FB,$02,$66,$02
            .byte $73,$02,$3D,$04,$5E,$02,$6F,$02
            .byte $56,$02,$5F,$02,$2D,$04,$FA,$02
            .byte $FB,$02,$6E,$02,$7B,$02,$11,$04
            .byte $5E,$10,$73,$10,$2D,$04,$11,$04
            .byte $00

; Sound command

L3932:      .byte $01,$00			  ; 0, Tune
L3934:      .byte $01,$00
L3936:      .byte $34,$00
L3938:      .byte $05,$00
            .byte $10,$00,$02,$00,$03,$00,$0A,$00 ; 1, Death
            .byte $10,$00,$03,$00,$FF,$FF,$0A,$00 ; 2, Rotate
            .byte $11,$00,$03,$00,$0E,$00,$0A,$00 ; 3, Rotate
            .byte $12,$00,$03,$00,$1F,$00,$0A,$00 ; 4, Rotate
            .byte $11,$00,$04,$00,$4C,$00,$05,$00 ; 5, Item taken
            .byte $13,$00,$05,$00,$00,$00,$01,$00 ; 6, Land after falling
            .byte $13,$00,$05,$00,$00,$00,$03,$00 ; 7, Land from jumping
            .byte $12,$00,$06,$00,$98,$00,$12,$00 ; 8, Password ok
            .byte $00,$00,$04,$00,$00,$00,$01,$00 ; 9, Laserbeam

            .byte $00,$00,$00,$00,$00,$00

;--------------------------------------------
; Wait loop A,Y
;--------------------------------------------

L3988:      ldx #$00               ; A2 00
L398A:      ldy L005B              ; A4 5B
L398C:      dex                    ; CA
            bne L398C              ; D0 FD
            dey                    ; 88
            bne L398C              ; D0 FA
            sec                    ; 38
            sbc #$01               ; E9 01
            bne L398A              ; D0 F3
            rts                    ; 60

;--------------------------------------------
; Generate random nr in A for code
;--------------------------------------------

L3998:      lda L000F              ; A5 0F
            and #$B8               ; 29 B8

            ldx #$05               ; A2 05
            ldy #$00               ; A0 00
L39A0:      asl A                  ; 0A
            bcc L39A4              ; 90 01
            iny                    ; C8

L39A4:      dex                    ; CA
            bne L39A0              ; D0 F9
            tya                    ; 98
            lsr A                  ; 4A
            lda L000F              ; A5 0F
            rol A                  ; 2A
            sta L000F              ; 85 0F
            rts                    ; 60

;--------------------------------------------
; Define logical colour 1 in A
;--------------------------------------------

L39AF:
	lda $b002
	eor #8
	sta $b002
	rts

;--------------------------------------------
; Plot Egghead
;--------------------------------------------

L39C9:      ldx L0050              ; X-pos Egghead
            ldy L0051              ; Y-pos Egghead
            jsr L3AF3              ; Calculate screenaddress 70/71

            lda L0050              ; X-pos Egghead
            and #$07               ; 29 07
            tax                    ; AA
            lda L3A45,X            ; BD 45 3A
            sta L3A08+1              ; 8D 09 3A
            lda L3A4D,X            ; BD 4D 3A
            sta L3A1F+1              ; 8D 20 3A
            txa                    ; 8A
            ora L0052              ; Direction flag
            tax                    ; AA
            lda L3A79,X            ; BD 79 3A

; Set address Egghead sprite

            clc                    ; 18
            adc #<L1100               ; 69 00
            sta L0072              ; 85 72
            lda L3AA9,X            ; BD A9 3A
            adc #>L1100               ; 69 11
            sta L0073              ; 85 73

; Plot sprite

L39F4:
	lsr L005A
	bcc L39F6
L39F6:
	lda #$02
	sta row_counter
            ldy #$00               ; A0 00
	sty L0074
L39F5:
            ldx #$00               ; A2 10
L39F8:
	ldy L0074
           lda (L0072),Y          ; B1 72
            sta L0075              ; 85 75
            iny                    ; C8
            lda (L0072),Y          ; B1 72
            sta L0076              ; 85 76
            iny                    ; C8
            sty L0074              ; 84 74

            lda L0075              ; A5 75
L3A08:      and #$FF               ; 29 FF
	ldy scrtab,x
            eor (L0070),Y          ; 51 70
            sta (L0070),Y          ; 91 70

            lda L0076              ; A5 76
	ldy scrtab+8,x
            eor (L0070),Y          ; 51 70
            sta (L0070),Y          ; 91 70

            lda L0075              ; A5 75
L3A1F:      and #$00               ; 29 00
	ldy scrtab+16,x
            eor (L0070),Y          ; 51 70
            sta (L0070),Y          ; 91 70

            inx
	cpx #$08
	bne L39F8

	inc L0071
	dec row_counter
            bne L39F5              ; D0 B4

            rts                    ; 60

; Mask for shifted Egghead sprite
;
; 0 = 1111 1111 0000 0000
; 1 = 0011 1111 1100 0000
; 2 = 0000 1111 1111 0000
; 3 = 0000 0011 1111 1100
; 4 = 1111 1111 0000 0000
; 5 = 0011 1111 1100 0000
; 6 = 0000 1111 1111 0000
; 7 = 0000 0011 1111 1100

L3A45:      .byte $FF,$3F,$0F,$03,$FF,$3F,$0F,$03
L3A4D:      .byte $00,$C0,$F0,$FC,$00,$C0,$F0,$FC

row_counter:	.byte 0
;--------------------------------------------
; Set tile address
;--------------------------------------------

L3A55:      ldx #$00               ; A2 00
            stx L0074              ; 86 74
            asl A                  ; 0A
            asl A                  ; 0A
            rol L0074              ; 26 74
            asl A                  ; 0A
            rol L0074              ; 26 74

            clc                    ; 18
            adc #<L1500               ; 69 00
            sta L3A70+1              ; 8D 71 3A
            lda #>L1500               ; A9 15
            adc L0074              ; 65 74
            sta L3A70+2              ; 8D 72 3A

            rts                    ; 60

;--------------------------------------------
; Plot tile
;--------------------------------------------

L3A6E:
	stx tmp_x
            ldx #$07               ; A0 07
L3A70:
            lda LDDDD,x            ; Set by routine above
	ldy scrtab,x
            sta (L0070),Y          ; 91 70
            dex                    ; 88
            bpl L3A70              ; 10 F8
	ldx tmp_x

            rts                    ; 60

scrtab:	.byte $00,$20,$40,$60,$80,$a0,$c0,$e0
	.byte $01,$21,$41,$61,$81,$a1,$c1,$e1
	.byte $02,$22,$42,$62,$82,$a2,$c2,$e2
tmp_x:	.byte 0

;--------------------------------------------
; Sprite start table
;--------------------------------------------

L3A79:      .byte $00,$20,$40,$60,$80,$A0,$C0,$E0
            .byte $00,$20,$40,$60,$80,$A0,$C0,$E0
            .byte $00,$20,$40,$60,$80,$A0,$C0,$E0
            .byte $00,$20,$40,$60,$80,$A0,$C0,$E0
            .byte $00,$20,$40,$60,$80,$A0,$C0,$E0
            .byte $00,$20,$40,$60,$80,$A0,$C0,$E0

L3AA9:      .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $01,$01,$01,$01,$01,$01,$01,$01
            .byte $02,$02,$02,$02,$02,$02,$02,$02
            .byte $03,$03,$03,$03,$03,$03,$03,$03
            .byte $04,$04,$04,$04,$04,$04,$04,$04
            .byte $05,$05,$05,$05,$05,$05,$05,$05

;--------------------------------------------
; Calculate screenaddress at X,Y tiles
;--------------------------------------------

L3AD9:
	stx L0070
	tya
	clc
	adc #>$8600
	sta L0071
	rts

;            tya                    ; 98
;            asl A                  ; 0A
;            tay                    ; A8
;            txa                    ; 8A
;            ldx #$00               ; A2 00
;            stx L0071              ; 86 71
;            asl A                  ; 0A
;            asl A                  ; 0A
;            asl A                  ; 0A
;            rol L0071              ; 26 71
;            adc L3B0F,Y            ; 79 0F 3B
;            sta L0070              ; 85 70
;            lda L0071              ; A5 71
;            adc L3B10,Y            ; 79 10 3B
;            sta L0071              ; 85 71
;            rts                    ; 60

;--------------------------------------------
; Calculate screenaddress from X,Y in L0070/71
;--------------------------------------------

L3AF3:
	txa
	lsr a
	lsr a
	sta L0070

            tya                    ; 98
            and #$07               ; 29 07
            sta L0077
	tax
	lda scrtab,x
	clc
	adc L0070
	sta L0070

;            sta L0077              ; Bit counter


	tya
	lsr a
	lsr a
	lsr a
	clc
	adc #>$8600
	sta L0071

	rts

;            tya                    ; 98
;            and #$F8               ; 29 F8
;            lsr A                  ; 4A
;            lsr A                  ; 4A
;            tay                    ; A8
;            txa                    ; 8A
;            and #$FC               ; 29 FC
;            asl A                  ; 0A
;            adc L3B0F,Y            ; 79 0F 3B
;            sta L0070              ; 85 70
;            lda #$00               ; A9 00
;            adc L3B10,Y            ; 79 10 3B
;            sta L0071              ; 85 71
;            rts                    ; 60

;--------------------------------------------
; Address screen row table
;--------------------------------------------

;L3B0F:      .byte <L6220
;L3B10:      .byte >L6220
;            .word L6360,L64A0,L65E0
;            .word L6720,L6860,L69A0,L6AE0
;            .word L6C20,L6D60,L6EA0,L6FE0
;            .word L7120,L7260,L73A0,L74E0
;            .word L7620,L7760,L78A0

;--------------------------------------------
; Table lamp taken
; Redefine tile at L16B0
;--------------------------------------------

L3B35:      ldy #$0F               ; A0 0F
L3B37:      lda L3B41,Y            ; B9 41 3B
            sta L16B0,Y            ; 99 B0 16
            dey                    ; 88
            bpl L3B37              ; 10 F7
            rts                    ; 60

L3B41:      .byte $77,$77,$77,$00,$77,$77,$77,$00
            .byte $77,$77,$77,$00,$00,$00,$00,$00

;--------------------------------------------
; Clear tile at L16B0
;--------------------------------------------

L3B51:      ldy #$0F               ; A0 0F
            lda #$00               ; A9 00
L3B55:      sta L16B0,Y            ; 99 B0 16
            dey                    ; 88
            bpl L3B55              ; 10 FA
            rts                    ; 60

;--------------------------------------------
; Check for door in room
;--------------------------------------------

L3B5C:      lda L0053              ; Room pointer

            cmp #$09               ; Check if room 9
            bne L3B6F              ; D0 0D

            ldx L3122              ; Check if password taken
            beq L3B8B              ; F0 24
            inx                    ; E8
            beq L3B8B              ; F0 21

            ldy #$08               ; A0 08
            jmp L3B9A              ; 4C 9A 3B

L3B6F:      cmp #$0B               ; Check if room 11
            bne L3B7D              ; D0 0A

            lda L311E              ; Check if door card taken
            beq L3B8B              ; Jump if not

            ldy #$04               ; A0 04
            jmp L3B9A              ; 4C 9A 3B

L3B7D:      cmp #$0C               ; Check if room 12
            bne L3B8B              ; D0 0A

            lda L311F              ; Check if oxygen tank taken
            beq L3B8B              ; F0 05

            ldy #$00               ; A0 00
            jmp L3B9A              ; 4C 9A 3B

L3B8B:      cmp #$31               ; Check if room 49
            bne L3B99              ; D0 0A
	
            lda L3126              ; Check if rusty key taken
            beq L3B99              ; F0 05

            ldy #$0C               ; A0 0C
            jmp L3B9A              ; 4C 9A 3B

L3B99:      rts                    ; 60

;--------------------------------------------
; Plot door in screen
;--------------------------------------------

L3B9A:      ldx #$00               ; A2 00
L3B9C:      lda L3BDF,Y            ; B9 DF 3B
            sta L0076,X            ; 95 76
            iny                    ; C8
            inx                    ; E8
            cpx #$04               ; E0 04
            bne L3B9C              ; D0 F5

            lda #$00               ; A9 00
            jsr L3A55              ; Set tile address

L3BAC:      ldx L0076              ; A6 76
            stx L007A              ; 86 7A

            lda L0078              ; A5 78
            sta L007B              ; 85 7B

            ldy L0077              ; Bit counter
            jsr L3AD9              ; Calculate screenaddress at X,Y

L3BB9:      lda #$00               ; A9 00
            ldx L007A              ; A6 7A
            ldy L0077              ; Bit counter
            lda #$00               ; A9 00
            jsr L3C7D              ; 20 7D 3C

            jsr L3A6E              ; Plot tile

	inc L0070
;            lda L0070              ; Point to tile right
;            clc                    ; 18
;            adc #$08               ; 69 08
;            sta L0070              ; 85 70
;            bcc L3BD2              ; 90 02
;            inc L0071              ; E6 71

L3BD2:      inc L007A              ; E6 7A
            dec L007B              ; C6 7B
            bne L3BB9              ; D0 E1

            inc L0077              ; Bit counter
            dec L0079              ; C6 79
            bne L3BAC              ; D0 CE

            rts                    ; 60

; Door data        X   Y   W   H
L3BDF:      .byte $0C,$0D,$09,$03	; y=$00
            .byte $14,$0F,$01,$02	; y=$04
            .byte $0C,$01,$01,$02	; y=$08
            .byte $12,$06,$04,$01	; y=$0c

;--------------------------------------------
; Locate cursor at X,Y
;--------------------------------------------

L3BEF:
	stx XPOS
	sty YPOS
	rts

;--------------------------------------------
; Select position Egghead and room, 9 or 13
;--------------------------------------------

L3BFC:      ldx #$00               ; A2 00
            lda L0053              ; Room pointer
            cmp #$09               ; C9 09
            beq L3C05              ; F0 01
            inx                    ; E8

L3C05:      lda L3C45,X            ; BD 45 3C
            sta L0050              ; X-pos Egghead
            lda L3C47,X            ; BD 47 3C
            sta L0051              ; Y-pos Egghead
            lda L3C49,X            ; BD 49 3C
            sta L0053              ; Room pointer

; Rotate screen bytes

L3C14:      lda #$02               ; A9 02
            jsr L383F              ; Play note
            lda #$03               ; A9 03
            jsr L383F              ; Play note
            lda #$04               ; A9 04
            jsr L383F              ; Play note

;            lda #<L1108               ; Select Egghead sprite
	lda #8
            sta L0072              ; 85 72
L3C27:
;            lda #>L1108               ; A9 11
	lda #$11
            sta L0073              ; 85 73

L3C2B:      ldx #$00               ; A2 00
            ldy L0073              ; A4 73
            jsr L3AD9              ; Calculate screenaddress at X,Y

            ldx #$20               ; A2 20
            jsr L3C9D              ; Left scroll object
            dec L0073              ; C6 73
            bpl L3C2B              ; 10 F0

            lda #$03               ; A9 03
            jsr L3988              ; Wait loop A,Y

            dec L0072              ; C6 72
            bne L3C27              ; D0 E3

            rts                    ; 60

L3C45:      .byte $44,$18	; X-pos Egghead
L3C47:      .byte $58,$48	; Y-pos Egghead
L3C49:      .byte $0D,$09	; Start room number

;--------------------------------------------
; Set background address L0072/73
;--------------------------------------------

L3C4B:      lda #$00               ; A9 00
            sta L0073              ; 85 73
            tya                    ; 98
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            rol L0073              ; 26 73

            clc                    ; 18
            adc #<L09E0               ; 69 E0
            sta L0072              ; 85 72
            lda #>L09E0               ; A9 09
            adc L0073              ; 65 73
            sta L0073              ; 85 73

            txa                    ; 8A
            lsr A                  ; 4A
            tay                    ; A8
            rts                    ; 60

;--------------------------------------------
; Return tilenr
;
; SEC = right tile
; CLC = left tile
;--------------------------------------------

L3C65:      sty L0070              ; 84 70
            jsr L3C4B              ; Set background address

            lda (L0072),Y          ; Read background tiles
            bcs L3C72              ; If carry set, read right tile
            lsr A                  ; If carry clear, read left tile
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A

L3C72:      ldy L0070              ; 
            cpy #$12               ; Check if row not of screen
            bcc L3C7A              ; Jump if not

            lda #$00               ; Reset row

L3C7A:      and #$0F               ; Filter tilenr
            rts                    ; 60

;--------------------------------------------

L3C7D:      sty L007C              ; 84 7C

            pha                    ; 48
            jsr L3C4B              ; Set background address
            pla                    ; 68
            bcs L3C90              ; B0 0A

            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            sta L0074              ; 85 74

            lda #$0F               ; A9 0F
            bne L3C94              ; Forced jump

L3C90:      sta L0074              ; 85 74
            lda #$F0               ; A9 F0

L3C94:      and (L0072),Y          ; 31 72
            ora L0074              ; 05 74
            sta (L0072),Y          ; 91 72
            ldy L007C              ; A4 7C

            rts                    ; 60

;--------------------------------------------
; Left scroll object on screen, X rows
;--------------------------------------------

L3C9D:
	stx tmp_x
            ldx #$07               ; A0 07
L3C9F:
	ldy scrtab,x
            lda (L0070),Y          ; B1 70
            asl A                  ; 0A
            adc #$00               ; 69 00
            sta (L0070),Y          ; 91 70
            dex                    ; 88
            bpl L3C9F              ; 10 F6

	inc L0070
	ldx tmp_x

L3CB4:      dex                    ; CA
            bne L3C9D              ; D0 E6

            rts                    ; 60

;--------------------------------------------

L3CB8:     .byte $00,$00,$00,$00,$00,$00,$00,$00

;--------------------------------------------
;
;--------------------------------------------

L3CC0:      lda #<L3D35               ; A9 35
            sta L3EB8              ; 8D B8 3E
            lda #>L3D35               ; A9 3D
            sta L3EB9              ; 8D B9 3E
            lda #<L3D47               ; A9 47
            sta L3EBA              ; 8D BA 3E
            lda #>L3D47               ; A9 3D
            sta L3EBB              ; 8D BB 3E

            lda #<L3E59               ; A9 59
            sta L3EF0              ; 8D F0 3E
            lda #>L3E59               ; A9 3E
            sta L3EF1              ; 8D F1 3E
            rts                    ; 60

;--------------------------------------------
; Water pistol taken
; Wipe enemy data
;--------------------------------------------

L3CDF:      lda #<L3D64               ; A9 64
            sta L3EB8              ; 8D B8 3E
            lda #>L3D64               ; A9 3D
            sta L3EB9              ; 8D B9 3E

            lda #<L3D54               ; A9 54
            sta L3EBA              ; 8D BA 3E
            lda #>L3D54               ; A9 3D
            sta L3EBB              ; 8D BB 3E
            rts                    ; 60

;--------------------------------------------
; Enemy data for each screen
;
; Max 3 enemies, if entry=$80, no enemie
;--------------------------------------------

L3CF4:      .byte $00,$03,$30,$28,$30,$78
            .byte $14,$00,$08,$6C,$34,$70
            .byte $80

L3D01:      .byte $00,$03,$08,$24,$08,$38
            .byte $04,$00,$78,$50,$10,$50
            .byte $80

L3D0E:      .byte $00,$03,$08,$08,$08,$50
            .byte $04,$02,$48,$14,$14,$60
            .byte $80

L3D1B:      .byte $00,$01,$38,$1C,$38,$78
            .byte $80
            .byte $80

L3D23:      .byte $00,$01,$50,$5C,$20,$50
            .byte $04,$02,$78,$34,$34,$70
            .byte $08,$02,$38,$40,$10,$50

L3D35:      .byte $0C,$03,$50,$22,$50,$78
            .byte $0C,$01,$78,$3E,$50,$78
            .byte $0C,$03,$50,$5A,$50,$78

L3D47:      .byte $0C,$03,$08,$26,$08,$20
            .byte $10,$01,$78,$3C,$20,$78
            .byte $80

L3D54:      .byte $80
            .byte $10,$01,$78,$3C,$20,$78
            .byte $80

L3D5C:      .byte $00,$03,$20,$3C,$00,$50
            .byte $80
            .byte $80

L3D64:      .byte $80
            .byte $80
            .byte $80

L3D67:      .byte $80
            .byte $80
            .byte $80

L3D6A:      .byte $10,$01,$28,$40,$28,$68
            .byte $80
            .byte $80

L3D72:      .byte $18,$01,$7E,$18,$00,$80
            .byte $10,$01,$58,$38,$40,$68
            .byte $80

L3D7F:      .byte $08,$00,$40,$34,$34,$58
            .byte $14,$00,$70,$50,$3C,$78
            .byte $80

L3D8C:      .byte $00,$01,$48,$20,$48,$78
            .byte $80
            .byte $80

L3D94:      .byte $14,$00,$20,$44,$44,$64
            .byte $80
            .byte $80

L3D9C:      .byte $00,$01,$00,$14,$00,$28
            .byte $80
            .byte $80

L3DA4:      .byte $08,$00,$30,$4C,$4C,$5C
            .byte $00,$01,$08,$1C,$08,$38
            .byte $80

L3DB1:      .byte $1C,$00,$60,$60,$00,$00
            .byte $10,$01,$10,$30,$10,$48
            .byte $80

L3DBE:      .byte $00,$03,$30,$20,$30,$78
            .byte $00,$01,$78,$48,$30,$78
            .byte $80

L3DCB:      .byte $04,$02,$78,$3C,$00,$78
            .byte $20,$03,$08,$1C,$08,$50
            .byte $80

L3DD8:      .byte $20,$03,$08,$28,$08,$48
            .byte $80
            .byte $80

L3DE0:      .byte $08,$00,$78,$3C,$04,$74
            .byte $80
            .byte $80

L3DE8:      .byte $08,$02,$78,$3C,$04,$6C
            .byte $80
            .byte $80

L3DF0:      .byte $20,$01,$08,$60,$08,$50
            .byte $80
            .byte $80

L3DF8:      .byte $24,$01,$68,$58,$20,$68
            .byte $14,$02,$78,$40,$00,$78
            .byte $80

L3E05:      .byte $20,$01,$10,$44,$08,$38
            .byte $80
            .byte $80

L3E0D:      .byte $28,$00,$78,$28,$28,$78
            .byte $24,$01,$58,$40,$08,$60
            .byte $80

L3E1A:      .byte $20,$03,$10,$44,$08,$48
            .byte $14,$00,$20,$3C,$00,$3C
            .byte $80

L3E27:      .byte $14,$02,$28,$20,$18,$2C
            .byte $20,$01,$28,$54,$08,$50
            .byte $80

L3E34:      .byte $14,$02,$20,$3C,$3C,$78
            .byte $08,$00,$58,$10,$0C,$2C
            .byte $80

L3E41:      .byte $00,$03,$28,$34,$1C,$50
            .byte $20,$01,$50,$60,$08,$78
            .byte $80

L3E4E:      .byte $80
            .byte $80
            .byte $80

L3E51:      .byte $28,$00,$68,$3C,$00,$78
            .byte $80
            .byte $80

L3E59:      .byte $2C,$00,$68,$40,$00,$00
            .byte $80
            .byte $80

L3E61:      .byte $08,$02,$68,$24,$00,$40
            .byte $80
            .byte $80

L3E69:      .byte $80
            .byte $80
            .byte $80

L3E6C:      .byte $28,$00,$60,$50,$28,$56
            .byte $80
            .byte $80

L3E74:      .byte $04,$02,$60,$08,$08,$56
            .byte $80
            .byte $80

L3E7C:      .byte $28,$02,$78,$28,$28,$64
            .byte $20,$01,$38,$64,$00,$48
            .byte $80

L3E89:      .byte $20,$01,$50,$60,$08,$78
            .byte $80
            .byte $80

L3E91:      .byte $28,$02,$20,$20,$10,$64
            .byte $10,$03,$30,$70,$20,$50
            .byte $80

L3E9E:      .byte $00,$03,$40,$34,$40,$78
            .byte $80
            .byte $80

L3EA6:      .byte $00,$03,$40,$44,$40,$78
            .byte $80
            .byte $80

;------------------------------------------------
; Enemy data pointers
;------------------------------------------------

L3EAE:      .byte <L3CF4
L3EAF:      .byte >L3CF4
            .word L3D01,L3D0E,L3D1B,L3D23

L3EB8:      .byte <L3D35
L3EB9:      .byte >L3D35
L3EBA:      .byte <L3D47
L3EBB:      .byte >L3D47
            .word L3D5C,L3D64,L3D67,L3D6A
            .word L3D72,L3D7F,L3D8C,L3D94
            .word L3D9C,L3DA4,L3DB1,L3DBE
            .word L3DCB,L3DD8,L3DE0,L3DE8
            .word L3DF0,L3DF8,L3E05,L3E0D
            .word L3E1A,L3E27,L3E34,L3E41
            .word L3E4E,L3E51

L3EF0:      .byte <L3E59
L3EF1:      .byte >L3E59
            .word L3E61,L3E69,L3E6C,L3E74
            .word L3E7C,L3E89,L3E91,L3E9E
            .word L3EA6

;------------------------------------------------
; Current enemy table
;------------------------------------------------

L3F04:      .byte $80,$80	; Enemy spritenr
L3F06:      .byte $80

L3F07:      .byte $00,$00,$03	; Enemy direction

L3F0A:      .byte $00,$60	; Enemy X-pos
L3F0C:      .byte $40

L3F0D:      .byte $00,$08	; Enemy Y-pos
L3F0F:      .byte $68

L3F10:      .byte $00,$34	; Enemy Min
L3F12:      .byte $28

L3F13:      .byte $00,$70,$68	; Enemy Max

;--------------------------------------------
; Plot enemies
;--------------------------------------------

L3F16:      ldx L0053              ; Room pointer
            lda L2F2A,X            ; BD 2A 2F
            bpl L3F1E              ; 10 01
            rts                    ; 60

; Set enemy data address

L3F1E:      asl A                  ; 0A
            tax                    ; AA
            lda L3EAE,X            ; BD AE 3E
            sta L0070              ; 85 70
            lda L3EAF,X            ; BD AF 3E
            sta L0071              ; 85 71

; Fill table for 3 enemies

            ldy #$FF               ; A0 FF
            ldx #$02               ; A2 02
L3F2E:      iny                    ; C8
            lda (L0070),Y          ; B1 70
            sta L3F04,X            ; Set enemy spritenr, $80=no sprite
            bmi L3F54              ; 30 1E
            iny                    ; C8
            lda (L0070),Y          ; B1 70
            sta L3F07,X            ; Set Enemy direction,0=L,2=R,1=U,3=D
            iny                    ; C8
            lda (L0070),Y          ; B1 70
            sta L3F0D,X            ; Enemy Y-pos
            iny                    ; C8
            lda (L0070),Y          ; B1 70
            sta L3F0A,X            ; Enemy X-pos
            iny                    ; C8
            lda (L0070),Y          ; B1 70
            sta L3F10,X            ; Enemy Min
            iny                    ; C8
            lda (L0070),Y          ; B1 70
            sta L3F13,X            ; Enemy Max

L3F54:      dex                    ; CA
            bpl L3F2E              ; 10 D7

; Plot enemies

L3F57:      ldx #$02               ; A2 02

L3F59:      stx L0078              ; 86 78
            lda L3F04,X            ; Enemy spritenr
            bmi L3FA3              ; 30 43

            lda L3F07,X            ; Enemy direction
            lsr A                  ; 4A
            bcs L3F6B              ; B0 05
            lda L3F0A,X            ; Enemy X-pos
            bcc L3F6F              ; 90 04

L3F6B:      lda L3F0D,X            ; Enemy Y-pos
            lsr A                  ; 4A
L3F6F:      and #$03               ; 29 03
            ora L3F04,X            ; Enemy spritenr
            tay                    ; A8
            lda L3A79,Y            ; B9 79 3A

; Set enemy sprite data address

            clc                    ; 18
            adc #<L31C8               ; 69 C8
            sta L0072              ; 85 72
            lda L3AA9,Y            ; B9 A9 3A
            adc #>L31C8               ; 69 31
            sta L0073              ; 85 73

            lda L3F0A,X            ; Enemy X-pos
            and #$03               ; 29 03
            tay                    ; A8
            lda L3A45,Y            ; B9 45 3A
            sta L3A08+1              ; 8D 09 3A
            lda L3A4D,Y            ; B9 4D 3A
            sta L3A1F+1              ; 8D 20 3A
            ldy L3F0D,X            ; Enemy Y-pos
            lda L3F0A,X            ; Enemy X-pos
            tax                    ; AA
            jsr L3AF3              ; Calculate screenaddress 70/71
            jsr L39F4              ; Plot sprite

L3FA3:      ldx L0078              ; A6 78
            dex                    ; CA
            bpl L3F59              ; 10 B1
            rts                    ; 60

;--------------------------------------------
; Check enemies
;--------------------------------------------

L3FA9:      .byte $FF,$00,$01,$00	; X -1, 0, 1, 0
L3FAD:      .byte $00,$FE,$00,$02	; Y  0,-2, 0  2


L3FB1:      jsr L3F57              ; Plot enemies

            ldy #$02               ; Set enemy counter
L3FB6:      sty L0078              ; 84 78

; Check if enemy on screen

            lda L3F04,Y            ; Enemy spritenr
            bmi L4012              ; Jump if no enemy

; Check special enemies

            cmp #$18               ; C9 18
            bne L3FC7              ; D0 06

            jsr L4074              ; 20 74 40
            clc                    ; 18
            bcc L4012              ; Forced jump

L3FC7:      cmp #$1C               ; Enemy is box
            bne L3FD1              ; D0 06

            jsr L408A              ; Egghead on box
            clc                    ; 18
            bcc L4012              ; Forced jump

L3FD1:      cmp #$2C               ; C9 2C
            bne L3FDB              ; D0 06
            jsr L410A              ; 20 0A 41

            clc                    ; 18
            bcc L4012              ; Forced jump

; Normal enemy

L3FDB:      ldx L3F07,Y            ; Enemy direction
            txa                    ; 8A
            lsr A                  ; 4A
            bcs L3FF1              ; B0 0F
            lda L3F0A,Y            ; Enemy X-pos
            cmp L3F10,Y            ; Enemy Min
            beq L4018              ; F0 2E
            cmp L3F13,Y            ; Enemy Max
            beq L401F              ; F0 30
            bne L3FFE              ; D0 0D

; Check for min and max positions

L3FF1:      lda L3F0D,Y            ; Enemy Y-pos
            cmp L3F10,Y            ; Enemy Min
            beq L4018              ; F0 1F
            cmp L3F13,Y            ; Enemy Max
            beq L401F              ; F0 21

L3FFE:      lda L3F0A,Y            ; Enemy X-pos
            clc                    ; 18
            adc L3FA9,X            ; 7D A9 3F
            sta L3F0A,Y            ; Enemy X-pos

            lda L3F0D,Y            ; Enemy Y-pos
            clc                    ; 18
            adc L3FAD,X            ; 7D AD 3F
            sta L3F0D,Y            ; Enemy Y-pos

L4012:      ldy L0078              ; A4 78
            dey                    ; 88
            bpl L3FB6              ; 10 9F

            rts                    ; 60

;--------------------------------------------
; Invert direction
;--------------------------------------------

L4018:      lda L3F07,Y            ; Enemy direction
            ora #$02               ; 09 02
            bne L4024              ; D0 05

L401F:      lda L3F07,Y            ; Enemy direction
            and #$FD               ; 29 FD
L4024:      sta L3F07,Y            ; Enemy direction

            tax                    ; AA
            jmp L3FFE              ; 4C FE 3F
            rts                    ; 60

;--------------------------------------------
; Check hit enemy-Egghead
;
; SEC = hit
; CLC = no hit
;--------------------------------------------

L402C:      ldy #$02               ; A0 02

L402E:      lda L3F04,Y            ; Enemy spritenr
            bmi L4041              ; 30 0E

            cmp #$18               ; C9 18
            beq L4041              ; F0 0A

            cmp #$1C               ; C9 1C
            beq L4041              ; F0 06

            jsr L4046              ; Check hit enemy-Egghead
            bcc L4041              ; 90 01

.if cheat
	clc
.endif

            rts                    ; 60

L4041:      dey                    ; 88
            bpl L402E              ; 10 EA

            clc                    ; 18
            rts                    ; 60

L4046:      lda L3F0A,Y            ; Enemy X-pos
            cmp L0050              ; X-pos Egghead
            bcc L4058              ; 90 0B
            lda L0050              ; X-pos Egghead
            clc                    ; 18
            adc #$07               ; 69 07
            cmp L3F0A,Y            ; Enemy X-pos
            bcs L405F              ; B0 08
            rts                    ; 60

L4058:      adc #$07               ; 69 07
            cmp L0050              ; X-pos Egghead
            bcs L405F              ; B0 01
            rts                    ; 60

L405F:      lda L3F0D,Y            ; Enemy Y-pos
            cmp L0051              ; Y-pos Egghead
            bcc L406F              ; 90 09
            lda L0051              ; Y-pos Egghead
            clc                    ; 18
            adc #$0F               ; 69 0F
            cmp L3F0D,Y            ; Enemy Y-pos
            rts                    ; 60

L406F:      adc #$0F               ; 69 0F
            cmp L0051              ; Y-pos Egghead
            rts                    ; 60

; Adjust 

L4074:      lda L3F0D,Y            ; Enemy Y-pos
            cmp L3F10,Y            ; Enemy Min
            beq L4083              ; F0 07
            sec                    ; 38
            sbc #$02               ; E9 02
            sta L3F0D,Y            ; Enemy Y-pos
            rts                    ; 60

L4083:      lda L3F13,Y            ; Enemy Max
            sta L3F0D,Y            ; Enemy Y-pos
            rts                    ; 60

;--------------------------------------------
; Egghead on box in screen $1c
;--------------------------------------------

L408A:      lda L3F0C              ; X-pos box
            cmp #$59               ; Check if in water
            bcs L40F6              ; If not jump

            lda L3F0F              ; Y-pos box
            cmp #$70               ; Check if in water
            bcs L409E              ; If not jump

            adc #$02               ; Move box up
            sta L3F0F              ; 8D 0F 3F
            rts                    ; 60

; Check if Egghead on box Y-pos 

L409E:      lda L0051              ; Y-pos Egghead
            clc                    ; 18
            adc #$10               ; 69 10
            cmp L3F0F              ; Y-pos box
            bcc L40C9              ; 90 21

; Check if Egghead on box moving left 

            lda L3F0C              ; X-pos box
            sec                    ; 38
            sbc #$01               ; E9 01
            cmp L0050              ; X-pos Egghead
            beq L40C2              ; F0 10

; Check if Egghead on box moving right

            clc                    ; 18
            adc #$02               ; 69 02
            cmp L0050              ; X-pos Egghead
            bne L40C9              ; Egghead not on box, jump

            cmp #$59               ; Check for right border water
            beq L40C9              ; If reached, jump

            inc L3F0C              ; Move box to the right
            bne L40C9              ; Forced jump

L40C2:      cmp #$1F               ; Check for left border water
            beq L40C9              ; If reached, jump
            dec L3F0C              ; Move box to the left

; Wobble box every 4 frames

L40C9:      lda L005A              ; Frame counter
            and #$03               ; 29 03
            bne L4109              ; D0 3A

            lda L3F0F              ; Y-pos box
            eor #$02               ; 49 02
            sta L3F0F              ; Y-pos box

; Check if Egghead X-pos on box

            lda L0050              ; X-pos Egghead
            cmp L3F0C              ; X-pos box
            bne L40F1              ; If not, jump

; Move Egghead Y-pos with box

	lda L0051              ; Y-pos Egghead
	cmp #$60
	bcc L40F0
  
             jsr L39C9              ; Erase Egghead

            lda L3F0F              ; Y-pos box
            sec                    ; 38
            sbc #$10               ; E9 10
            sta L0051              ; Y-pos Egghead

            jsr L39C9              ; Plot Egghead

            lda #$FF               ; A9 FF
            sta L0059              ; Auto rising flag (lift)
L40F0:
            rts                    ; 60

; Egghead not on box

L40F1:      lda #$00               ; A9 00
            sta L0059              ; Auto rising flag (lift)
            rts                    ; 60

L40F6:      clc                    ; 18
            adc #$07               ; 69 07
            cmp L0050              ; X-pos Egghead
            bcc L4109              ; 90 0C

            ldx L3F0F              ; Y-pos box
            cpx L0051              ; Y-pos Egghead
            bne L4109              ; D0 05

            sbc #$08               ; E9 08
            sta L3F0C              ; X-pos box

L4109:      rts                    ; 60

;--------------------------------------------

L410A:      ldx L3F12              ; AE 12 3F

            lda L3F0F              ; AD 0F 3F
            clc                    ; 18
            adc L415D,X            ; 7D 5D 41
            sta L3F0F              ; 8D 0F 3F

            inx                    ; E8
            cpx #$11               ; E0 11
            bne L411E              ; D0 02

            ldx #$00               ; A2 00

L411E:      stx L3F12              ; 8E 12 3F

            lda L3F0C              ; AD 0C 3F
            cmp L0050              ; X-pos Egghead
            beq L4132              ; F0 0A
            bcs L412F              ; B0 05

            inc L3F0C              ; EE 0C 3F
            bne L4132              ; D0 03

L412F:      dec L3F0C              ; CE 0C 3F

L4132:      lda L3F0C              ; AD 0C 3F
            cmp #$64               ; C9 64
            beq L413A              ; F0 01

            rts                    ; 60

L413A:      jsr L3F57              ; Plot enemies

            lda #$02               ; A9 02
            jsr L3988              ; Wait loop A,Y

            jsr L3F57              ; Plot enemies

            inc L3F0F              ; EE 0F 3F

            lda L3F0F              ; AD 0F 3F
            cmp #$80               ; C9 80
            bcc L413A              ; 90 EB
            sta L3F06              ; 8D 06 3F

            lda #<L3D64               ; A9 64
            sta L3EF0              ; 8D F0 3E
            lda #>L3D64               ; A9 3D
            sta L3EF1              ; 8D F1 3E
            rts                    ; 60

L415D:      .byte $FB,$FD,$FE,$FF,$FF,$00,$FF,$00
            .byte $00,$00,$01,$00,$01,$01,$02,$03
            .byte $05,$00,$00

;--------------------------------------------
; Print text from X
;--------------------------------------------

L4170:
	lda strtab2,x
	ldy strtab2+4,x
	tax
	jsr PUTSTRING
            rts

L417C:      .byte $13-4,$04			; x=$00
            .byte "ENTER CODE ????"
            .byte $08,$08,$08,$08,0
            .byte $ff
L417D:
            .byte $13-4,$04			; x=$01
            .byte "CODE NOT VALID ",0
            .byte $ff
L417E:
            .byte $13-4,$02
            .byte "LIVES "			; x=$02
L41AC:      .byte "_",0
            .byte $ff
L417F:
            .byte $0C-4,$0C-2			; x=$03
            .byte "CONGRATULATIONS",0
            .byte $0A-4,$0E-2
            .byte "MISSION ACCOMPLISHED",0
            .byte $ff

strtab2:
	.byte <L417C,<L417D,<L417E,<L417F
	.byte >L417C,>L417D,>L417E,>L417F

;--------------------------------------------
; Empty keyboard buffer
;--------------------------------------------

L41DE:
	rts

;--------------------------------------------
; Game finished
;--------------------------------------------

L41E5:      lda L3125              ; Check if computer games taken
            bne L41EB              ; D0 01
            rts                    ; 60

L41EB:      lda #$40               ; A9 40
            sta L0080              ; Lives

            ldx #$03               ; 'Congratulations ...'
            jsr L4170              ; Print text from X

            jsr L41DE              ; Wait loop

; Wait 10 sec for keypress before restart

L41EC:
	jsr $fb78		; Wait 2 sec
	jsr $fb78
	jsr $fb78
	jsr $fb78
	jsr $fb78
L41ED:
	rts


;--------------------------------------------
; Enter code for opening door
; Return CLC if ok and SEC if nok
;--------------------------------------------

L4200:      ldx #$00               ; 'Enter code'
            jsr L4170              ; Print text from X

            jsr L41DE              ; Wait loop

; Enter 4 digit code

            ldx #$03               ; A2 03
L420A:      jsr LFFE0              ; OSRDCH
            cmp #$41               ; C9 41
            bcc L420A              ; 90 F9

            cmp #$5B               ; C9 5B
            bcs L420A              ; B0 F5

            jsr LFFEE              ; OSWRCH

            sta L425B,X            ; 9D 5B 42
            dex                    ; CA

            bpl L420A              ; 10 EC

            jsr L41DE              ; Wait loop

; Check if code ok

            ldx #$04               ; A2 04
L4223:      dex                    ; CA
            bmi L4233              ; 30 0D
            lda L425B,X            ; BD 5B 42
            cmp L0B00,X            ; DD 00 0B
            beq L4223              ; F0 F5

            ldx #$01               ; 'Code not valid'
            jmp L4170              ; Print text from X

; Code valid

L4233:      dec L3122              ; CE 22 31

            ldy #$02               ; A0 02
            jsr L423D              ; 20 3D 42

            ldy #$01               ; A0 01
L423D:      ldx #$0C               ; A2 0C
            lda #$00               ; A9 00
            jsr L3C7D              ; 20 7D 3C
            jsr L3AD9              ; Calculate screenaddress at X,Y

; Scroll door up

            ldx #$07               ; A0 07
L4249:      stx L0072              ; 84 72
            lda #$00               ; A9 00
	ldy scrtab,x
            sta (L0070),Y          ; 91 70

            lda #$0A               ; A9 0A
            jsr L3988              ; Wait loop A,Y

            ldx L0072              ; A4 72
            dex                    ; 88
            bpl L4249              ; 10 F0

            clc                    ; 18
            rts                    ; 60

; Code storage backwards

L425B:      .byte $00,$00,$00,$00

;--------------------------------------------
; Set death flag
;--------------------------------------------

L425F:      lda L0080              ; Lives
            ora #$80               ; 09 80
            sta L0080              ; Lives

            lda #$01               ; A9 01
            jmp L383F              ; Play note

;--------------------------------------------
; Add extra life
;--------------------------------------------

L426A:      inc L0080              ; Lives
            bne L429F              ; Print 'Lives x'

;--------------------------------------------
; Set death flag and substract 1 life
;--------------------------------------------

L426E:      lda L0080              ; Lives
            sec                    ; 38

.if cheat
	sbc #$80
.else
            sbc #$81               ; E9 81
.endif

            sta L0080              ; Lives

            jsr L41DE              ; Wait loop

wait_key:
;            jsr LFFE0              ; OSRDCH
	ldx #2
	jsr L464B
	beq wait_key

            lda L0080              ; Lives
            bne L4280              ; D0 01
            rts                    ; 60

;--------------------------------------------

L4280:      jsr L39C9              ; Plot Egghead
            jsr L3F57              ; Plot enemies

            lda L454F              ; AD 4F 45
            sta L0050              ; X-pos Egghead

            lda L4550              ; AD 50 45
            sta L0051              ; Y-pos Egghead

            lda L4551              ; AD 51 45
            bpl L4297              ; 10 02

            lda #$FF               ; A9 FF

L4297:      sta L0054              ; Jump addition

            jsr L3F16              ; Plot enemies
            jsr L39C9              ; Plot Egghead

; Print 'Lives x'

L429F:
            lda L0080              ; Lives
            cmp #$06               ; C9 06
            bcc L42AE              ; 90 02
            lda #$05               ; A9 05

L42AE:      clc                    ; 18
            adc #$5A               ; 69 5A
            sta L41AC              ; 8D AC 41

            ldx #$02               ; 'Lives x'
            jmp L4170              ; Print text from X

;--------------------------------------------
; Check tile
;--------------------------------------------

L42B9:
            jsr L3C65              ; Get tile
            cmp #$04               ; Check teleport tile
            bne L42C9              ; D0 09
            jsr L3BFC              ; Select position Egghead and room, 9 or 13
            jsr L4438              ; Plot room
            jmp L39C9              ; Plot Egghead

L42C9:      cmp #$08               ; Check item tile
            bne L42D0              ; D0 03
            jmp L4552              ; Item taken

L42D0:      cmp #$07               ; Check finish game tile
            bne L42D7              ; D0 03
            jmp L41E5              ; 4C E5 41

L42D7:      cmp #$06               ; Check door tile
            bne L42E0              ; D0 05
            jsr L4200              ; Input code
            sec                    ; 38
            rts                    ; 60

L42E0:      cmp #$05               ; Check power tile
            bne L42E7              ; D0 03
            jmp L43E7              ; Slow down laserbeam if spanner taken

L42E7:      cmp #$03               ; Check death tile
            bne L42EE              ; D0 03
L42EB:      jmp L425F              ; Death

L42EE:      cmp #$02               ; Check solid tile
            rts                    ; 60

;--------------------------------------------
; Check tile
;--------------------------------------------

L42F1:      jsr L3C65              ; Get tile
            cmp #$03               ; CHeck death tile
            beq L42EB              ; F0 F3

            cmp #$08               ; Check item tile
            bne L42FF              ; D0 03
            jmp L4552              ; Item taken

L42FF:      cmp #$00               ; Check air tile
            rts                    ; 60

;--------------------------------------------

L4302:      .byte $0F			; x=$00
L4303:      .byte $0D
L4304:      .byte $0A
L4305:      .byte $0B
            .byte $1D,$1A,$03,$83	; x=$04
            .byte $21,$0F,$02,$84	; x=$08
            .byte $22,$07,$09,$83	; x=$0c
            .byte $23,$07,$0B,$0C	; x=$10
            .byte $24,$10,$0D,$83	; x=$14
            .byte $25,$12,$03,$06	; x=$18
            .byte $28,$13,$08,$83	; x=$1c
            .byte $2C,$16,$02,$83	; x=$20

L4326:      lda #$00               ; A9 00
            sta L0084              ; 85 84

            ldx #$24               ; A2 24

            lda L0053              ; Room pointer

L432E:      dex                    ; CA
            dex                    ; CA
            dex                    ; CA
            dex                    ; CA
            bpl L4335              ; 10 01

            rts                    ; 60

L4335:      cmp L4302,X            ; DD 02 43
            bne L432E              ; D0 F4

            lda L4303,X            ; BD 03 43
            sta L0082              ; 85 82
            lda L4304,X            ; BD 04 43
            sta L0083              ; 85 83
            lda L4305,X            ; BD 05 43
            sta L0084              ; 85 84

            lda #$01               ; A9 01
            sta L0085              ; 85 85
            lda #$00               ; A9 00
            sta L0086              ; 85 86
L4351:      lda L0084              ; A5 84
            bne L4356              ; D0 01

L4355:      rts                    ; 60

L4356:      lda L005A              ; Frame counter
            and #$03               ; 29 03
            bne L4355              ; D0 F9

            dec L0085              ; C6 85
            beq L436C              ; F0 0C

            lda L0086              ; A5 86
            beq L4355              ; F0 F1

            lda #$09               ; A9 09
            jsr L383F              ; Play note
            clc                    ; 18
            bcc L4376              ; 90 0A

L436C:      lda L0086              ; A5 86
            eor #$03               ; 49 03
            sta L0086              ; 85 86

            lda L0087              ; A5 87
            sta L0085              ; 85 85

L4376:      ldx L0082              ; A6 82
            ldy L0083              ; A4 83
            stx L0077              ; Bit counter
            sty L0078              ; 84 78
            jsr L3AD9              ; Calculate screenaddress at X,Y

            lda L0084              ; A5 84
            and #$7F               ; 29 7F
            sta L0075              ; 85 75
            lda L005A              ; Frame counter
            and #$04               ; 29 04
            lsr A                  ; 4A
            lsr A                  ; 4A
            sta L0076              ; 85 76

            bit L0084              ; 24 84
            bmi L43BC              ; 30 29

            lda L0086              ; A5 86
            beq L439B              ; F0 04

            lda L0076              ; A5 76
            adc #$4E               ; 69 4E

L439B:      jsr L3A55              ; Set tile address
L439E:      jsr L3A6E              ; Plot tile

;            lda L0070              ; Point to tile right
;            clc                    ; 18
;            adc #$08               ; 69 08
;            sta L0070              ; 85 70
;            bcc L43AC              ; 90 02
;            inc L0071              ; E6 71
	inc L0070

L43AC:      ldx L0077              ; Bit counter
            ldy L0078              ; A4 78
            lda L0086              ; A5 86
            jsr L3C7D              ; 20 7D 3C
            inc L0077              ; Bit counter
            dec L0075              ; C6 75
            bne L439E              ; D0 E3
            rts                    ; 60

L43BC:      lda L0086              ; A5 86
            beq L43C4              ; F0 04

            lda L0076              ; A5 76
            adc #$4C               ; 69 4C
L43C4:      jsr L3A55              ; Set tile address
L43C7:      jsr L3A6E              ; Plot tile

;            lda L0070              ; Point 1 row below
;            clc                    ; 18
;            adc #$40               ; 69 40
;            sta L0070              ; 85 70
;            lda L0071              ; A5 71
;            adc #$01               ; 69 01
;            sta L0071              ; 85 71
	inc L0071

            ldx L0077              ; Bit counter
            ldy L0078              ; A4 78
            lda L0086              ; A5 86
            jsr L3C7D              ; 20 7D 3C

            inc L0078              ; E6 78
            dec L0075              ; C6 75
            bne L43C7              ; D0 E1

            rts                    ; 60

;--------------------------------------------
; Action if power tile hit
;--------------------------------------------

L43E7:      lda L3123              ; Check spanner
            beq L4404              ; F0 18

            lda #$20               ; Slow down laserbeam
            sta L0087              ; 85 87

; Loop colours

            lda #$01               ; Red
L43F2:      sta L0070              ; 85 70
            jsr L39AF              ; Define logical colour 1

            lda #$15               ; A9 0A
            jsr L3988              ; Wait loop A,Y

            inc L0070              ; E6 70
            lda L0070              ; A5 70
            cmp #$08               ; C9 08
            bne L43F2              ; D0 EE

L4404:      rts                    ; 60

;--------------------------------------------
; Select colour for room, nibble=colour
;--------------------------------------------

L4405:      lda L0053              ; Room pointer
            lsr A                  ; 4A
            tax                    ; AA
            lda L4418,X            ; BD 18 44
            bcs L4412              ; B0 04
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A
L4412:      and #$0F               ; 29 0F
            tay                    ; A8
            jmp L39AF              ; Define logical colour 1

L4418:      .byte $00,$07,$00,$00,$27,$77,$21,$01
            .byte $22,$22,$21,$11,$00,$00,$11,$11
            .byte $06,$66,$66,$60,$66,$55,$55,$57
            .byte $03,$33,$33,$37,$00,$00,$03,$37

;--------------------------------------------
; Plot room
;
; L0070/71 = Screen address tile
; L0072/73 = Pointer to room data
; L0074/75 = Tile data address
; L0078/79 = Backup screen, each nibble is tile
;
; if b7=1 then tilenr = data AND &$7F and nr = 1
; if b7=0 then tilenr = data and nr = data+1
;--------------------------------------------

L4438:      lda #<L09E0               ; A9 E0
            sta L0078              ; 85 78
            lda #>L09E0               ; A9 09
            sta L0079              ; 85 79

            ldx L0053              ; Room pointer
            lda L2F2A,X            ; Get room data from map
            bpl L4448              ; 10 01
            rts                    ; 60

; Set room data address

L4448:      sta L44F7+1              ; Set room nr for item
            asl A                  ; 0A
            tax                    ; AA
            lda L2ED4,X            ; BD D4 2E
            sta L0072              ; 85 72
            lda L2ED5,X            ; BD D5 2E
            sta L0073              ; 85 73

            ldy #$00               ; A0 00
            sty L0075              ; Row counter

; Build 1 row

; Calculate screenaddress tile L0070/71

L445B:      ldx #$00               ; Reset tile counter
            ldy L0075              ; A4 75
            jsr L3AD9              ; Calculate screenaddress at X,Y

            lda #$00               ; A9 00
            sta L0076              ; 85 76

L4466:      ldy #$00               ; A0 00
            lda (L0072),Y          ; B1 72
            bpl L447A              ; 10 0E

; Set tile data address L0074/75 if b7=1

            and #$7F               ; 29 7F
            sta L007A              ; 85 7A
            jsr L3A55              ; Set tile address

            inx                    ; Next column
            inc L0072              ; E6 72
            beq L448C              ; F0 14
            bne L448E              ; D0 14

L447A:      sta L007A              ; 85 7A
            jsr L3A55              ; Set tile address

            iny                    ; C8
            lda (L0072),Y          ; B1 72
            tax                    ; Set tile counter

            lda L0072              ; Adjust room data pointer
            clc                    ; 18
            adc #$02               ; 69 02
            sta L0072              ; 85 72
            bcc L448E              ; 90 02

L448C:      inc L0073              ; E6 73

L448E:      lda L0077              ; Bit counter
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            sta L0077              ; Bit counter

            ldy L007A              ; A4 7A
            lda L2F6E,Y            ; Get item nr to be plotted in room
            ora L0077              ; Bit counter
            sta L0077              ; Bit counter

            lda L0076              ; A5 76
            lsr A                  ; 4A
            bcc L44B0              ; 90 0C

            lda L0077              ; Bit counter
            ldy #$00               ; A0 00
            sta (L0078),Y          ; 91 78
            inc L0078              ; E6 78
            bne L44B0              ; D0 02
            inc L0079              ; E6 79

L44B0:      lda L007A              ; A5 7A
            jsr L3A6E              ; Plot tile

	inc L0070
;            lda L0070              ; Point to screenaddress right 
;            clc                    ; 18
;            adc #$08               ; 69 08
;            sta L0070              ; 85 70
;            bcc L44C0              ; 90 02
;            inc L0071              ; E6 71

L44C0:      inc L0076              ; Next column

            dex                    ; Next tile
            bne L448E              ; D0 C9

            lda L0076              ; A5 76
            cmp #$20               ; Check if 32 tiles plot in a row
            bne L4466              ; D0 9B

            inc L0075              ; Next row
            lda L0075              ; A5 75
            cmp #$12               ; 18 rows plot?
            bne L445B              ; D0 88

            jsr L4405              ; Set room colour
            jsr L3F16              ; Plot enemies
            jsr L3B5C              ; Check for door in room
            jsr L4326              ; 20 26 43
            lda L0050              ; X-pos Egghead
            sta L454F              ; 8D 4F 45
            lda L0051              ; Y-pos Egghead
            sta L4550              ; 8D 50 45
            lda L0054              ; Jump addition
            sta L4551              ; 8D 51 45

L44EE:      ldx #$0A               ; A2 0A

L44F0:      dex                    ; CA
            bpl L44F4              ; 10 01
L44F3:      rts                    ; 60

;--------------------------------------------
; Plot item on screen
;--------------------------------------------

L44F4:      lda L3100,X            ; BD 00 31
L44F7:      cmp #$00               ; C9 00
            bne L44F0              ; D0 F5
            stx L0058              ; Itemnr on screen

            lda L311E,X            ; BD 1E 31
            bmi L44F3              ; 30 F1
            jsr L450A              ; Plot item on screen
            lda #$08               ; A9 08
            jmp L45BB              ; 4C BB 45

L450A:      lda L3A79,X            ; BD 79 3A
            clc                    ; 18
            adc #<L2FC0               ; 69 C0
            sta L0072              ; 85 72
            lda L3AA9,X            ; BD A9 3A
            adc #>L2FC0               ; 69 2F
            sta L0073              ; 85 73
            ldy L3114,X            ; BC 14 31
            lda L310A,X            ; BD 0A 31
            tax                    ; AA
            stx L0056              ; X-pos item
            sty L0057              ; Y-pos item
            jsr L3AD9              ; Calculate screenaddress at X,Y

; Plot item 16x16 on screen

            ldx #$02               ; A2 02
L4529:
	stx tmp_x
            ldx #$0F               ; A0 0F
L452B:
	txa
	tay
            lda (L0072),Y          ; B1 72
	ldy scrtab,x
            eor (L0070),Y          ; 51 70
            sta (L0070),Y          ; 91 70
            dex                    ; 88
            bpl L452B              ; 10 F7
	ldx tmp_x

;            lda L0070              ; Point to next row on screen
;            clc                    ; 18
;            adc #$40               ; 69 40
;            sta L0070              ; 85 70
;            lda L0071              ; A5 71
;            adc #$01               ; 69 01
;            sta L0071              ; 85 71
	inc L0071

            lda L0072              ; Skip 16 bytes in item data
            adc #$10               ; 69 10
            sta L0072              ; 85 72
            bcc L454B              ; 90 02
            inc L0073              ; E6 73

L454B:      dex                    ; CA
            bne L4529              ; D0 DB
            rts                    ; 60

;--------------------------------------------

L454F:      .byte $3C
L4550:      .byte $00
L4551:      .byte $00

;--------------------------------------------
; Item taken
;--------------------------------------------

L4552:
            lda #$05               ; A9 05
            jsr L383F              ; Play note

            ldx L0058              ; Itemnr on screen
            dec L311E,X            ; Mark item as taken
            jsr L450A              ; Remove item from screen

            ldx #$13-4
            ldy #$04               ; A0 04
	jsr L3BEF

; Print item name on screen

            lda L0058              ; Itemnr on screen
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            asl A                  ; 0A
            tax                    ; AA

            ldy #$10               ; A0 10
L456F:      lda L3128,X            ; BD 28 31
            jsr LFFEE              ; OSWRCH
            inx                    ; E8
            dey                    ; 88
            bne L456F              ; D0 F6

            lda #$00               ; A9 00
            jsr L45BB              ; 20 BB 45

            ldx L0058              ; Itemnr on screen

; Check for oxygen tank

            cpx #$01               ; 
            bne L458B              ; D0 07

            lda L0052              ; Direction flag
            ora #$10               ; 09 10
            sta L0052              ; Direction flag

L458A:      rts                    ; 60

; Check for water pistol

L458B:      cpx #$02               ; Check for water pistol
            bne L4592              ; D0 03
            jmp L3CDF              ; Wipe enemy data

; Check for password

L4592:      cpx #$04               ; 
            bne L45A9              ; D0 13

            ldx #$1C-4               ; A2 1C
            ldy #$04               ; A0 04
            jsr L3BEF              ; Locate cursor at X,Y

            ldx #$03               ; Print password
L459F:      lda L0B00,X            ; BD 00 0B
            jsr LFFEE              ; OSWRCH
            dex                    ; CA
            bpl L459F              ; 10 F7
            rts                    ; 60

; Check for table lamp

L45A9:      cpx #$06               ; 
            bne L45B0              ; D0 03
            jmp L3B35              ; Redefine tile

; Check for life shield

L45B0:      cpx #$03               ; 
            beq L45B8              ; Add extra life

; Check for first aid box

            cpx #$09               ; 
            bne L458A              ; D0 D2

L45B8:      jmp L426A              ; Add extra life

L45BB:      sta L0075              ; 85 75

            ldx L0056              ; X-pos item
            ldy L0057              ; Y-pos item
            jsr L45CD              ; 20 CD 45

            inx                    ; E8
            jsr L45CD              ; 20 CD 45
            iny                    ; C8
            jsr L45CD              ; 20 CD 45
            dex                    ; CA

L45CD:      lda L0075              ; A5 75
            jmp L3C7D              ; 4C 7D 3C

;--------------------------------------------
; Scan keys
;--------------------------------------------

L45D2:      .byte $00		; Q-key		, $ef
L45D3:      .byte $01		; W-key		, $de
L45D4:      .byte $02		; SPACE-key	, $9d
L45D5:      .byte $03		; ESC-key	, $8f
L45D6:      .byte $04		; RETURN-key	, $b6
 
; Scan ESC-key

L45D7:      ldx L45D5              ; ESC-key
            jsr L464B              ; Read key in X
            beq L45E9              ; Skip if not pressed

;            lda #$7E               ; Acknowledge ESC condition
;            jsr LFFF4              ; OSBYTE

            lda #$00               ; Reset lives
            sta L0080              ; Lives
            rts                    ; 60

; Scan RETURN-key

L45E9:      ldx L45D6              ; RETURN-key
            jsr L464B              ; Read key in X
            beq L45FA              ; Skip if not pressed

            jsr L41DE              ; Wait loop
            jsr LFFE0              ; OSRDCH, freeze game
            jmp L41DE              ; Wait loop

L45FA:      lda L0054              ; Jump addition
            beq L4609              ; Jump if not jumping
            bmi L4606              ; Jump if falling

            jsr L472E              ; 20 2E 47
            clc                    ; 18
            bcc L4609              ; Forced jump

L4606:      jsr L46A4              ; 20 A4 46

; Scan Q-key

L4609:      ldx L45D2              ; Q-key
            jsr L464B              ; Read key in X
            beq L4614              ; F0 03
            jsr L4778              ; Handle walk left

; Scan W-key

L4614:      ldx L45D3              ; W-key
            jsr L464B              ; Read key in X
            beq L461F              ; F0 03
            jsr L47BE              ; Handle walk right

; Scan SPACE-key

L461F:      ldx L45D4              ; SPACE-key
            jsr L464B              ; Read key in X
            beq L463C              ; F0 15

; Handle jumping

            lda L0054              ; Jump addition
            bne L464A              ; D0 1F

            lda L0059              ; Auto rising flag (lift)
            bne L464A              ; D0 1B

            jsr L466F              ; 20 6F 46
            bcc L463C              ; 90 08

            jsr L4701              ; 20 01 47
            bcs L463C              ; B0 03

            inc L0054              ; Jump addition
            rts                    ; 60

L463C:      lda L0054              ; Jump addition
            bne L464A              ; Check if jumping

            jsr L466F              ; 20 6F 46
            bcs L464A              ; B0 05

            dec L0054              ; Jump addition
            jmp L46A4              ; 4C A4 46

L464A:      rts                    ; 60

;--------------------------------------------
; Read key in X
;--------------------------------------------

L464B:
	jsr readkey
L4653:      rts                    ; 60

;--------------------------------------------
; Jump table, additions
;
; L4653,x for jumping up
; L4660,x for falling
;--------------------------------------------

;            .byte $06,$05,$04,$03,$02,$02
;            .byte $01,$01,$01,$00,$01,$00
;L4660:      .byte $01
;
;            .byte $00,$01,$01,$01,$02,$02,$03
;            .byte $04,$05,$06,$06,$06,$06
;            .byte $80

            .byte $06,$05,$04,$03,$02,$02
            .byte $01,$01,$01,$00,$01,$00
L4660:      .byte $01

            .byte $00,$01,$01,$01,$02,$02,$03
            .byte $04,$05,$06,$06,$06,$06
            .byte $80

;--------------------------------------------

L466F:      lda L0059              ; Auto rising flag (lift)
            bmi L46A2              ; 30 2F

            lda L0050              ; X-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            tax                    ; AA
            lda L0051              ; Y-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A
            tay                    ; A8
            iny                    ; C8
            iny                    ; C8

            lda L0051              ; Y-pos Egghead
            and #$07               ; 29 07
            cmp #$05               ; C9 05
            bcc L4689              ; 90 01
            iny                    ; C8

L4689:      jsr L42F1              ; 20 F1 42
            bne L46A2              ; D0 14
            inx                    ; E8

            jsr L42F1              ; 20 F1 42
            bne L46A2              ; D0 0E

            lda L0050              ; X-pos Egghead
            and #$03               ; 29 03
            bne L469C              ; D0 02

L469A:      clc                    ; 18
            rts                    ; 60

L469C:      inx                    ; E8
            jsr L42F1              ; 20 F1 42
            beq L469A              ; F0 F8

L46A2:      sec                    ; 38
            rts                    ; 60

;--------------------------------------------
;
;--------------------------------------------

L46A4:      jsr L39C9              ; Plot Egghead

            lda L0054              ; Jump addition
            eor #$FF               ; 49 FF
            tax                    ; AA
            lda L4660,X            ; Falling
            bpl L46B7              ; 10 06

            jsr L39C9              ; Plot Egghead

            jmp L425F              ; Death

L46B7:
	clc
            adc L0051              ; Y-pos Egghead
            sta L0051              ; Y-pos Egghead

            dec L0054              ; Jump addition

            jsr L466F              ; 20 6F 46
            bcc L46E9              ; 90 27

            lda L0051              ; Y-pos Egghead
            and #$F8               ; 29 F8
            sta L0051              ; Y-pos Egghead

            jsr L466F              ; 20 6F 46
            bcs L46D3              ; B0 06

            lda L0051              ; Y-pos Egghead
            adc #$08               ; 69 08
            sta L0051              ; Y-pos Egghead

L46D3:      ldx L0054              ; Jump addition
            lda #$00               ; A9 00
            sta L0054              ; Jump addition

            cpx #$F6               ; E0 F6
            bcs L46E1              ; B0 04

            lda #$07               ; A9 07
            bne L46E3              ; Forced jump

L46E1:
            lda #$06               ; A9 06
L46E3:      jsr L383F              ; Play note

            jmp L39C9              ; Plot Egghead

L46E9:      lda L0051              ; Y-pos Egghead
            cmp #$80               ; C9 80
            bcc L46FE              ; 90 0F

            lda #$00               ; A9 00
            sta L0051              ; Y-pos Egghead
            sta L0054              ; Jump addition

            lda L0053              ; Room pointer
            adc #$07               ; 69 07
            sta L0053              ; Room pointer

            jsr L4438              ; Plot room

L46FE:      jmp L39C9              ; Plot Egghead

;--------------------------------------------
; Check tile above egghead while jumping
;--------------------------------------------

L4701:      lda L0050              ; X-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            tax                    ; AA
            lda L0051              ; Y-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A
            tay                    ; A8

            lda L0051              ; Y-pos Egghead
            and #$07               ; 29 07
            bne L4713              ; D0 01
            dey                    ; 88

L4713:      jsr L42B9              ; Check tile
            bcs L472C              ; B0 14

            inx                    ; E8

            jsr L42B9              ; Check tile
            bcs L472C              ; B0 0E

            lda L0050              ; X-pos Egghead
            and #$03               ; 29 03
            bne L4726              ; D0 02

L4724:      clc                    ; 18
            rts                    ; 60

L4726:      inx                    ; E8
            jsr L42B9              ; Check tile
            bcc L4724              ; 90 F8

L472C:      sec                    ; 38
            rts                    ; 60

;--------------------------------------------
; Check jumping up
;--------------------------------------------

L472E:      lda L0054              ; Jump addition
            cmp #$0D               ; Check top reached
            bcc L473B              ; Jump if not

            lda #$FF               ; On top, start falling
            sta L0054              ; Jump addition
            jmp L46A4              ; 4C A4 46

L473B:      jsr L39C9              ; Plot Egghead
            jsr L4701              ; 20 01 47
            bcc L4757              ; 90 14
            lda L0051              ; Y-pos Egghead
            and #$07               ; 29 07
            beq L4752              ; F0 09
            lda L0051              ; Y-pos Egghead
            and #$F8               ; 29 F8
            clc                    ; 18
            adc #$08               ; 69 08
            sta L0051              ; Y-pos Egghead
L4752:      inc L0054              ; Jump addition
            jmp L39C9              ; Plot Egghead

L4757:      ldx L0054              ; Jump addition
            sec                    ; 38
            lda L0051              ; Y-pos Egghead
            sbc L4653,X            ; Jumping up
            sta L0051              ; Y-pos Egghead

            inc L0054              ; Jump addition

            lda L0051              ; Y-pos Egghead
            bpl L4775              ; 10 0E
            lda L0053              ; Room pointer
            sec                    ; 38
            sbc #$08               ; E9 08
            sta L0053              ; Room pointer
            lda #$74               ; A9 74
            sta L0051              ; Y-pos Egghead
            jsr L4438              ; Plot room
L4775:      jmp L39C9              ; Plot Egghead

;--------------------------------------------
; Handle walk left
;--------------------------------------------

L4778:      lda L0050              ; X-pos Egghead
            beq L47B2              ; F0 36
            and #$03               ; 29 03
            bne L47A3              ; D0 23

            lda L0050              ; X-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            tax                    ; AA
            dex                    ; CA

            lda L0051              ; Y-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A
            tay                    ; A8

            jsr L42B9              ; Check tile
            bcs L47B1              ; B0 20

            iny                    ; C8
            jsr L42B9              ; Check tile
            bcs L47B1              ; B0 1A

            lda L0051              ; Y-pos Egghead
            and #$07               ; 29 07
            beq L47A3              ; F0 06

            iny                    ; C8
            jsr L42B9              ; Check tile
            bcs L47B1              ; B0 0E

L47A3:      jsr L39C9              ; Plot Egghead
            dec L0050              ; X-pos Egghead

L47A8:      lda L0052              ; Direction flag
            ora #$08               ; 09 08
            sta L0052              ; Direction flag
            jmp L39C9              ; Plot Egghead

L47B1:      rts                    ; 60

L47B2:      dec L0053              ; Room pointer
            lda #$78               ; A9 78
            sta L0050              ; X-pos Egghead
            jsr L4438              ; Plot room
            clc                    ; 18
            bcc L47A8              ; Forced jump

;--------------------------------------------
; Handle walk right
;--------------------------------------------

L47BE:      lda L0050              ; X-pos Egghead
            cmp #$78               ; C9 78
            beq L47FB              ; F0 37

            and #$03               ; 29 03
            bne L47EC              ; D0 24

            lda L0050              ; X-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            tax                    ; AA
            inx                    ; E8
            inx                    ; E8

            lda L0051              ; Y-pos Egghead
            lsr A                  ; 4A
            lsr A                  ; 4A
            lsr A                  ; 4A
            tay                    ; A8

            jsr L42B9              ; Check tile
            bcs L47FA              ; B0 20

            iny                    ; C8
            jsr L42B9              ; Check tile
            bcs L47FA              ; B0 1A

            lda L0051              ; Y-pos Egghead
            and #$07               ; 29 07
            beq L47EC              ; F0 06

            iny                    ; C8
            jsr L42B9              ; Check tile
            bcs L47FA              ; B0 0E

L47EC:      jsr L39C9              ; Plot Egghead
            inc L0050              ; X-pos Egghead

L47F1:      lda L0052              ; Direction flag
            and #$10               ; 29 10
            sta L0052              ; Direction flag
            jmp L39C9              ; Plot Egghead

L47FA:      rts                    ; 60

L47FB:      inc L0053              ; Room pointer
            lda #$00               ; A9 00
            sta L0050              ; X-pos Egghead
            jsr L4438              ; Plot room

            clc                    ; 18
            bcc L47F1              ; Forced jump

;--------------------------------------------

L4806:      .byte $3E,$26,$34,$39,$30
            .byte $30,$20,$8C,$D0

L4810:

	jsr clg

;            lda #$06               ; Cyan
;            jsr L39AF              ; Define logical colour 1

            ldx #$00               ; Controls
            jsr L482F              ; Print text

            jsr L3800              ; Play tune

            ldx #$01               ; 'PRESS SPACE ...'
            jsr L482F              ; Print text

L4822:
	ldx #2
	jsr readkey
           beq L4822              ; F0 F4

            rts                    ; 60

;--------------------------------------------
; Print text from X
;--------------------------------------------

L482F:
	lda strtab1,x
	ldy strtab1+3,x
	tax
	jsr PUTSTRING
L483A:      rts                    ; 60

L483B:						; x=$00
            .byte $0E-4,$09-2			; Cursor 14,9
            .byte "EGGHEAD III",0
            .byte $0E-4,$0C-2			; Cursor 14,12
            .byte "CONTROLS ARE",0
            .byte $0C-4,$0E-2			; Cursor 12,14
            .byte "Z",0
            .byte $18-4,$0E-2			; Cursor 24,14
            .byte "LEFT",0
            .byte $0C-4,$10-2			; Cursor 12,16
            .byte "X",0
            .byte $17-4,$10-2			; Cursor 23,16
            .byte "RIGHT",0
            .byte $0C-4,$12-2			; Cursor 12,18
            .byte "SPACE",0
            .byte $18-4,$12-2			; Cursor 24,18
            .byte "JUMP",0
            .byte $08-4,$17-3			; Cursor 8,23
            .byte "@\OO\ JONATHAN CAULDWELL",0
            .byte $04-4,$18-3			; Cursor 4,24
            .byte "BBC/ELK VERSION C DEWHURST \OO^",0
	.byte 3,$19-3
	.byte "ATOM VERSION K VAN OSS \O[",96,0
            .byte $ff
L483C:						; x=$01
            .byte $0A-4,$14-2			; Cursor 10,20
            .byte "PRESS SPACE TO BEGIN",0
            .byte $ff
L483D:						; x=$02
            .byte $13-4,$04			; Cursor 19,4
            .byte "                ",0
            .byte $ff

strtab1:	
	.byte <L483B,<L483C,<L483D
	.byte >L483B,>L483C,>L483D

;--------------------------------------------
; Clear keyboard buffer
;--------------------------------------------

L48F5:
	rts

;--------------------------------------------
; Reset vars
;--------------------------------------------

L48FC:      ldx #$09               ; A2 09
            lda #$00               ; A9 00
L4900:      sta L311E,X            ; 9D 1E 31
            dex                    ; CA
            bpl L4900              ; 10 FA

            lda #$00               ; A9 00
            sta L0052              ; Direction flag
            sta L0054              ; Jump addition
            sta L0059              ; Auto rising flag (lift)
            sta L0088              ; 85 88

;	sta controlflag		; Input
	sta $b002		; Colorset

            lda #$18               ; A9 18
            sta L0050              ; X-pos Egghead

            lda #$48               ; A9 48
            sta L0051              ; Y-pos Egghead

            lda #$09               ; A9 09
            sta L0053              ; Room pointer

            lda #$05               ; A9 02
            sta L0087              ; 85 87

            jsr L3B51              ; Reset 16x vars at L16B0

            lda #$05               ; A9 05
            sta L0080              ; Lives

            jsr L429F              ; Print 'Lives x'

            jsr L3CC0              ; Set pointers

            ldx #$02               ; '     ....'
            jsr L482F              ; Print text

            jmp L4AA9              ; Check 4-letter code?

;--------------------------------------------
; Program entry
;--------------------------------------------

L4935:
	lda #0
	tax
zloop:
	sta 0,x
	inx
	bne zloop

	jsr clz

	lda #5-2
	sta L005B

	lda #$87		; Set random var
	sta L000F

	jsr setmode5
	jsr cls

	bit $0381
	bpl no_joy_init
	jsr joyinit

no_joy_init:
	jsr L2AA8

;            lda #$0C               ; CLS
;            jsr LFFEE              ; OSWRCH

;            jsr L48F5              ; Clear keyboard buffer

L493D:      jsr L4810              ; Print intro and wait for SPACE

            jsr L48FC              ; Reset vars

            jsr L4438              ; Plot room
            jsr L39C9              ; Plot Egghead
            jsr L3C14              ; Rotate screen bytes

.if cheat
;	lda #$f0
;	sta $b000
;	jsr $fe94
.endif

L494C:      inc L005A              ; Frame counter
            jsr L45D7              ; Scan keys
            jsr L3FB1              ; Remove enemies
            jsr L49CF              ; Scroll objects on screen
            jsr L3F57              ; Plot enemies

            jsr L402C              ; Check hit enemy-Egghead
            bcc L4962              ; 90 03
            jsr L425F              ; Death

L4962:      jsr L4351              ; 20 51 43

            bit L0080              ; Lives
            bvc L496B              ; 
            bvs L493D              ; 70 D2
L496B:      bpl L4970              ; 10 03

            jsr L426E              ; Set death flag and substract 1 life

L4970:      lda #$05               ; A9 05
            jsr L3988              ; Wait loop A,Y

            lda L0080              ; Lives
            bne L494C              ; D0 D3

            jmp L493D              ; 4C 3D 49

;--------------------------------------------

L497C:      lda L3F06              ; AD 06 3F
            cmp #$18               ; C9 18
            bne L49A3              ; D0 20

            lda L3F0F              ; AD 0F 3F
            cmp L0051              ; Y-pos Egghead
            bcc L49A3              ; 90 19

            lda L0051              ; Y-pos Egghead
            clc                    ; 18
            adc #$10               ; 69 10
            cmp L3F0F              ; CD 0F 3F
            bcc L49A3              ; 90 0F

            jsr L49BA              ; 20 BA 49
            bcc L49A3              ; 90 0A

            jsr L4701              ; 20 01 47
            bcc L49A8              ; 90 0A

            dec L0054              ; Jump addition
            jsr L46A4              ; 20 A4 46

L49A3:      lda #$00               ; A9 00
            sta L0059              ; Auto rising flag (lift)
            rts                    ; 60

L49A8:      lda #$FF               ; A9 FF
            sta L0059              ; Auto rising flag (lift)

            jsr L39C9              ; Plot Egghead
            lda L3F0F              ; AD 0F 3F
            sec                    ; 38
            sbc #$10               ; E9 10
            sta L0051              ; Y-pos Egghead
            jmp L39C9              ; Plot Egghead

L49BA:      lda L0050              ; X-pos Egghead
            cmp L3F0C              ; CD 0C 3F
            bcc L49C9              ; 90 08
            lda L3F0C              ; AD 0C 3F
            adc #$07               ; 69 07
            cmp L0050              ; X-pos Egghead
            rts                    ; 60

L49C9:      adc #$08               ; 69 08
            cmp L3F0C              ; CD 0C 3F
            rts                    ; 60

;--------------------------------------------
; Scroll objects on screen
;--------------------------------------------

L49CF:      lda L0053              ; Room pointer

            cmp #$09               ; Room 9
            bne L49DA              ; D0 05
            ldx #$00               ; A2 00
            jmp L4A28              ; Scroll object

L49DA:      cmp #$0D               ; Room 13
            bne L49E3              ; D0 05
            ldx #$02               ; A2 02
            jmp L4A28              ; Scroll object

L49E3:      cmp #$0F               ; Room 15
            bne L49EA              ; D0 03
            jmp L4A81              ; Scroll object

L49EA:      cmp #$15               ; Room 21
            bne L49F3              ; D0 05
            ldy #$00               ; A0 00
            jmp L4A4F              ; Scroll object

L49F3:      cmp #$16               ; Room 22
            bne L49FF              ; D0 08
            jsr L497C              ; 20 7C 49
            ldy #$04               ; A0 04
            jmp L4A4F              ; Scroll object

L49FF:      cmp #$1C               ; Room 28
            bne L4A08              ; D0 05
            ldy #$08               ; A0 08
            jmp L4A4F              ; Scroll object

L4A08:      cmp #$1D               ; Room 29
            bne L4A11              ; D0 05
            ldy #$0C               ; A0 0C
            jmp L4A4F              ; Scroll object

L4A11:      cmp #$1E               ; Room 30
            bne L4A1A              ; D0 05
            ldy #$10               ; A0 10
            jmp L4A4F              ; Scroll object

L4A1A:      cmp #$33               ; Room 51
            bne L4A23              ; D0 05
            ldy #$14               ; A0 14
            jmp L4A4F              ; Scroll object

L4A23:      rts                    ; 60

;--------------------------------------------
; Scroll object on screen 9 or 13
;--------------------------------------------

L4A24:      .byte <$8D03	; Scroll object room 9
L4A25:      .byte >$8D03
            .word $8f14		; Scroll object room 13

L4A28:      lda L4A24,X            ; Get screenaddress object
            sta L0070              ; 85 70
            lda L4A25,X            ; BD 25 4A
            sta L0071              ; 85 71

            ldx #$02               ; Object has 2 rows
            jmp L3C9D              ; Left scroll object

;--------------------------------------------
; Scroll object on screen 21,22,27,28,29,51
;--------------------------------------------

L4A37:      .byte <$9614		; y=$00
L4A38:      .byte >$9614
L4A39:      .byte $05
L4A3A:      .byte $00		; plus = right scroll, minus = left scroll
            .byte <$9604,>$9604,$06,$FF	; y=$04
            .byte <$9508,>$9508,$10,$FF	; y=$08
            .byte <$9707,>$9707,$04,$37	; y=$0c
            .byte <$8e03,>$8e03,$05,$00	; y=$10
            .byte <$9619,>$9619,$03,$FF	; y=$04

L4A4F:      lda L4A37,Y            ; B9 37 4A
            sta L0070              ; 85 70
            lda L4A38,Y            ; B9 38 4A
            sta L0071              ; 85 71

            ldx L4A39,Y            ; Width
            lda L4A3A,Y            ; B9 3A 4A
            bpl L4A64              ; Right scroll object
            jmp L3C9D              ; Left scroll object

; Right scroll object on screen, X rows

L4A64:
	stx tmp_x
            ldx #$07               ; A0 07
L4A66:
	ldy scrtab,x
            lda (L0070),Y          ; B1 70
            lsr A                  ; 4A
            bcc L4A6D              ; 90 02
            ora #$80               ; 09 80
L4A6D:      sta (L0070),Y          ; 91 70
            dex                    ; 88
            bpl L4A66              ; 10 F4

	inc L0070
	ldx tmp_x

L4A7D:      dex                    ; CA
            bne L4A64              ; D0 E4
            rts                    ; 60

;--------------------------------------------
;
;--------------------------------------------

L4A81:      lda L3122              ; Password taken
            bne L4A8B              ; Jump if yes

            lda L005A              ; Frame counter
            lsr A                  ; 4A
            bcs L4A8C              ; Skip even frames

L4A8B:      rts                    ; 60

L4A8C:      jsr L44EE              ; 20 EE 44

            inc L0088              ; E6 88

            lda L0088              ; A5 88
            and #$1F               ; 29 1F
            sta L0088              ; 85 88
            and #$10               ; 29 10
            bne L4A9E              ; D0 03

            jmp L44EE              ; 4C EE 44

L4A9E:      lda L0088              ; A5 88
            and #$07               ; 29 07
            bne L4A8B              ; D0 E7

            lda #$08               ; A9 08
            jmp L383F              ; Play note

;--------------------------------------------
; Check 4-letter code for door in room 9
;--------------------------------------------

L4AA9:      ldx #$03               ; A2 03
L4AAB:      stx L0070              ; 86 70

L4AAD:      jsr L3998              ; Random nr
            cmp #$41               ; C9 41
            bcc L4AAD              ; 90 F9
            cmp #$5B               ; C9 5B
            bcs L4AAD              ; B0 F5

            ldx L0070              ; A6 70
            sta L0B00,X            ; 9D 00 0B
            dex                    ; CA
            bpl L4AAB              ; 10 EB
            rts                    ; 60

;------------------------------------------------
; Small logo data
;------------------------------------------------

L2900:
            .byte $00,$FF,$FF,$F8,$F8,$FF,$FF,$F8
            .byte $00,$C7,$CF,$0F,$1F,$1F,$1F,$1F
            .byte $00,$F8,$F9,$01,$03,$03,$03,$7B
            .byte $00,$7F,$FF,$E0,$E0,$E0,$E0,$EE
            .byte $00,$7C,$7C,$7C,$7C,$7F,$00,$3F
            .byte $00,$6F,$6F,$6F,$6F,$EF,$0F,$C7
            .byte $00,$FC,$FC,$80,$80,$F0,$F0,$80
            .byte $00,$3C,$3C,$3C,$7E,$76,$76,$F3
            .byte $00,$3F,$3F,$3E,$3E,$3E,$3E,$3E
            .byte $00,$00,$C0,$E0,$70,$30,$30,$30

            .byte $F8,$F8,$FF,$FF,$00,$00,$00,$00
            .byte $1F,$0F,$CF,$C3,$00,$3F,$3F,$3F
            .byte $7B,$79,$F9,$F8,$00,$FF,$FF,$FF
            .byte $EC,$E9,$E3,$77,$07,$CF,$DF,$9F
            .byte $FF,$FF,$FF,$FF,$FF,$FF,$C0,$01
            .byte $F3,$F9,$FC,$FE,$FE,$FF,$07,$01
            .byte $80,$80,$FD,$FD,$00,$00,$80,$80
            .byte $F3,$FF,$F1,$F1,$00,$3F,$3F,$3F
            .byte $3E,$3E,$BF,$BF,$00,$C0,$C0,$C0
            .byte $70,$E0,$C0,$00,$00,$00,$00,$00

            .byte $00,$00,$00,$00,$00,$00,$00,$00
            .byte $01,$01,$01,$01,$01,$01,$01,$01
            .byte $FE,$FE,$FE,$FE,$FE,$FE,$FE,$FE
            .byte $3E,$3E,$3C,$7D,$7C,$7D,$7C,$7C
            .byte $2A,$51,$AC,$6A,$E8,$71,$FF,$7E
            .byte $A8,$C4,$9A,$8A,$C2,$E6,$DE,$3E
            .byte $D0,$DC,$4F,$6F,$6F,$6F,$6F,$6F
            .byte $3F,$3F,$3F,$FF,$FF,$FF,$FF,$FF
            .byte $C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0
            .byte $00,$00,$00,$00,$00,$00,$00,$00

            .byte $00,$00,$00,$00,$00,$1F,$7F,$FC
            .byte $01,$3F,$3F,$3F,$00,$FF,$FF,$00
            .byte $FE,$FF,$FF,$FF,$00,$7F,$7F,$7E
            .byte $7E,$3E,$BF,$BF,$1F,$DF,$CF,$0F
            .byte $FB,$5C,$0F,$C0,$FF,$FF,$FF,$FF
            .byte $FE,$1C,$F1,$07,$FF,$FF,$FF,$FF
            .byte $EF,$C3,$C0,$C0,$80,$81,$07,$1F
            .byte $FF,$FF,$FF,$3F,$00,$FC,$FF,$87
            .byte $C0,$C0,$C0,$C0,$00,$01,$07,$1F
            .byte $00,$00,$00,$00,$00,$FF,$FF,$80

            .byte $FF,$FF,$7F,$0F,$00,$00,$FF,$FF
            .byte $00,$F0,$FE,$FF,$FF,$3F,$FE,$F8
            .byte $7E,$7E,$7E,$7F,$7F,$7E,$7E,$7E
            .byte $07,$03,$18,$FC,$F0,$00,$00,$00
            .byte $FF,$FF,$FF,$3F,$00,$39,$7D,$45
            .byte $FE,$FC,$F0,$C6,$1E,$C7,$F3,$0B
            .byte $3E,$7C,$7C,$7C,$3E,$1F,$07,$01
            .byte $00,$00,$00,$00,$00,$87,$FF,$FC
            .byte $3E,$7F,$7F,$7C,$3E,$1F,$07,$01
            .byte $00,$F0,$F0,$00,$00,$80,$FF,$FF

;--------------------------------------------
; Display small logo and ^^^line
;--------------------------------------------

L2AA8:      lda #<L2900               ; A9 00
            sta L0070              ; 85 70
            lda #>L2900               ; A9 29
            sta L0071              ; 85 71

; Position small Egghead logo

            lda #<$8000               ; A9 20
            sta L0072              ; 85 72
            lda #>$8000               ; A9 58
            sta L0073              ; 85 73

            lda #$05               ; A2 05
	sta col_counter
L2ABA:
	ldx #0
L2ABC:
	ldy #0
            lda (L0070),Y          ; B1 70
	ldy scrtab,x
            sta (L0072),Y          ; 91 72
	inc L0070
	bne L2ABD
	inc L0071
L2ABD:
            inx                   ; 88
	cpx #8
            bne L2ABC              ; 10 F9
	
	inc L0072
	lda L0072
	cmp #10
	bne L2ABA

	inc L0073
	lda #0
	sta L0072
	dec col_counter
	bne L2ABA

; Print ^^^^^^ line under logo

            lda #$20               ; A2 20
	sta col_counter
L2AE0:      ldx #$07               ; A0 07
L2AE2:      lda L2AF9,x            ; B9 F9 2A
	ldy scrtab,x
            sta (L0072),Y          ; 91 72
            dex                    ; 88
            bpl L2AE2              ; 10 F8

	inc L0072

L2AF5:      dec col_counter                    ; CA
            bne L2AE0              ; D0 E8

            rts                    ; 60

col_counter:	.byte 0

; ^ character definition

L2AF9:      .byte $00,$10,$28,$44,$82,$01,$00,$00

;-------------------------------------------
; OSRDCH
;-------------------------------------------

LFFE0:
	lda $b000
	and #$f0
	sta $b000
	jmp $fe94
	
